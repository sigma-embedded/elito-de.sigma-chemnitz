Index: busybox-1.18.1/networking/ifupdown.c
===================================================================
--- busybox-1.18.1.orig/networking/ifupdown.c
+++ busybox-1.18.1/networking/ifupdown.c
@@ -309,6 +309,29 @@ static char *parse(const char *command, 
 	return result;
 }
 
+static int kernel_autoconf(char const *iface)
+{
+	int	fd;
+	char	buf[1024];
+	ssize_t	l;
+
+	if (strcmp(iface, "eth0") != 0)
+		return 0;
+
+	fd = open("/proc/cmdline", O_RDONLY);
+	if (fd < 0)
+		return 0;
+
+	l = read(fd, buf, sizeof buf - 1);
+	close(fd);
+	if (l < 0)
+		return 0;
+
+	buf[l] = '\0';
+	return (strncmp(buf, "ip=", 3) == 0 ||
+		strstr(buf, " ip=") != NULL);
+}
+
 /* execute() returns 1 for success and 0 for failure */
 static int execute(const char *command, struct interface_defn_t *ifd, execfn *exec)
 {
@@ -514,7 +537,17 @@ static const struct dhcp_client_t ext_dh
 };
 # endif /* FEATURE_IFUPDOWN_EXTERNAL_DHCPC */
 
-# if ENABLE_FEATURE_IFUPDOWN_EXTERNAL_DHCP
+# if 1
+static int FAST_FUNC dhcp_up(struct interface_defn_t *ifd, execfn *exec)
+{
+	return execute("/sbin/initctl emit -q start-dhcp INTERFACE=%iface%"
+		       "[[ HOSTNAME=%hostname%]][[ CLIENT=%clientid%]]"
+		       "[[ LEASEHOURS=%leasehours%]][[ LEASETIME=%leasetime%]]"
+		       "[[ VENDOR=%vendor%]][[ HWADDRESS=%hwaddress%]]"
+		       "[[ UDHCPC_OPTIONS='%udhcpc_opts%']]",
+		       ifd, exec);
+}
+# elif ENABLE_FEATURE_IFUPDOWN_EXTERNAL_DHCP
 static int FAST_FUNC dhcp_up(struct interface_defn_t *ifd, execfn *exec)
 {
 	unsigned i;
@@ -558,7 +591,22 @@ static int FAST_FUNC dhcp_up(struct inte
 }
 # endif
 
-# if ENABLE_FEATURE_IFUPDOWN_EXTERNAL_DHCP
+# if 1
+static int FAST_FUNC dhcp_down(struct interface_defn_t *ifd, execfn *exec)
+{
+	int result;
+	result = execute("/sbin/initctl emit -q stop-dhcp INTERFACE=%iface%",
+			 ifd, exec);
+
+	if (!kernel_autoconf(ifd->iface)) {
+		result += static_down(ifd, exec);
+	} else {
+		result += 1;
+	}
+
+	return result == 2 ? result : 0;
+}
+# elif ENABLE_FEATURE_IFUPDOWN_EXTERNAL_DHCP
 static int FAST_FUNC dhcp_down(struct interface_defn_t *ifd, execfn *exec)
 {
 	int result = 0;
@@ -620,24 +668,26 @@ static int FAST_FUNC bootp_up(struct int
 
 static int FAST_FUNC ppp_up(struct interface_defn_t *ifd, execfn *exec)
 {
-	return execute("pon[[ %provider%]]", ifd, exec);
+	return execute("/sbin/initctl emit -q start-ppp INTERFACE=%iface%"
+		       "[[ PROVIDER=%provider%]]", ifd, exec);
 }
 
 static int FAST_FUNC ppp_down(struct interface_defn_t *ifd, execfn *exec)
 {
-	return execute("poff[[ %provider%]]", ifd, exec);
+	return execute("/sbin/initctl emit -q stop-ppp INTERFACE=%iface%",
+		       ifd, exec);
 }
 
 static int FAST_FUNC wvdial_up(struct interface_defn_t *ifd, execfn *exec)
 {
-	return execute("start-stop-daemon --start -x wvdial "
-		"-p /var/run/wvdial.%iface% -b -m --[[ %provider%]]", ifd, exec);
+	return execute("/sbin/initctl emit -q start-wvdial INTERFACE=%iface%"
+		       "[[ PROVIDER=%provider%]]", ifd, exec);
 }
 
 static int FAST_FUNC wvdial_down(struct interface_defn_t *ifd, execfn *exec)
 {
-	return execute("start-stop-daemon --stop -x wvdial "
-			"-p /var/run/wvdial.%iface% -s 2", ifd, exec);
+	return execute("/sbin/initctl emit -q stop-wvdial INTERFACE=%iface%",
+		       ifd, exec);
 }
 
 static const struct method_t methods[] = {
