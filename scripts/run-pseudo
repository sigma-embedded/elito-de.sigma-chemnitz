#! /bin/bash

## Usage: run-pseudo <abs_top_builddir> <prog> [<args>*]

_cmd=`type -P "$2"`
if ! test -x "$_cmd"; then
    echo "***** Could not find bitbake binary. Make sure that it was"
    echo "***** checked out by 'make init' in your project directory"
    exit 1
fi >&2
unset _cmd

BB_ENV_EXTRAWHITE='W CCACHE_DIR HOME GIT_SSL_CAINFO '\
'ftp_proxy http_proxy https_proxy no_proxy '\
'ELITO_CRT ELITO_KEY ELITO_PROG_SSL_CLIENT ELITO_USE_LIBPROXY ELITO_PROG_PROXY '\
'PSEUDO PSEUDO_DISABLED PSEUDO_PASSWD PSEUDO_DEBUG PSEUDO_UNLOAD '\
'ELITO_METRICS_ID BB_NUMBER_THREADS BB_NUMBER_PARSE_THREADS'\
'BB_FETCH_PREMIRRORONLY BB_NO_NETWORK BB_GENERATE_MIRROR_TARBALLS'\
'ABRT_IGNORE_ALL MACHINE BBMULTICONFIG'

BBFETCH2=True
export BB_ENV_EXTRAWHITE PSEUDO_BUILD BBFETCH2

. "$1/set-env"

if test -n "$ELITO_PSEUDO_DIRECT"; then
    PSEUDO=
else
    test -n "$ELITO_PSEUDO_OK" -o -e "$1/.tmp/pseudo.env" || {
      echo "***** Could not find bitbake environment. Try"
      echo "        make bitbake-clean && make init"
      echo "***** again."
      exit 1
    } >&2
    . "$1/.tmp/pseudo.env"
fi

test x"$ELITO_PSEUDO_ENABLE" != x1 || unset PSEUDO_DISABLED

unset ELITO_PSEUDO_OK
unset ELITO_PSEUDO_DIRECT

_prog=$2
shift 2

test -z "$ELITO_CGROUP_NAME" || "$ELITO_SCRIPTS_DIR"/exec-cgroup "$ELITO_CGROUP_NAME" $$

oom_adj=/proc/self/oom_score_adj
test -e $oom_adj || oom_adj=/proc/self/oom_adj

while $ELITO_OOM_ADJUST; do
    read oom < $oom_adj || break
    let ++oom
    echo $oom > $oom_adj || break

    break
done 2>/dev/null

## required e.g. in docker environments which set fd limit to 1Mi
## which slows down bitbake significantly
ulimit -n 2048 2>&1 || :

exec_secure $PSEUDO "$_prog" "$@"
