PYTHON :=		python
SED :=			sed
SVN :=			svn
abs_top_srcdir :=	$(abspath @abs_top_srcdir@)
abs_top_builddir :=	$(abspath @abs_top_builddir@)

ELITO_ROOTDIR :=	$(abspath $(abs_top_srcdir)/..)
CACHE_DIR :=		$(abspath @_CACHE_DIR@)
PROJECT_NAME :=		@PROJECT_NAME@
QUILT :=		@QUILT@

VPATH ?=		$(abs_top_srcdir)

SED_EXPR :=	-e 's!@'ELITO_ROOTDIR'@!$(ELITO_ROOTDIR)!g'		\
		-e 's!@'CACHE_DIR'@!$(CACHE_DIR)!g'			\
		-e 's!@'PROJECT_NAME'@!$(PROJECT_NAME)!g'

BITBAKE_REV =		1180
BITBAKE_URI =		http://svn.berlios.de/svnroot/repos/bitbake/branches/bitbake-1.8

AUTOCONF_FILES =	Makefile		\
			set-env.in		\
			conf/local.conf.in	\
			bitbake

CFG_FILES =		Makefile		\
			set-env			\
			conf/local.conf		\
			bitbake

TEMPLATE_FILES =	conf/project.conf	\
			.gitignore		\
			recipes/helloworld/helloworld.bb

_template_files =	$(addprefix $(abs_top_builddir)/,$(TEMPLATE_FILES))

config:			$(CFG_FILES) $(_template_files) .gitignore bitbake-validate
init:			bitbake-fetch

_bitbake_root =		$(abs_top_builddir)/tmp/staging/.bitbake

bitbake-fetch:		tmp/stamps/.bitbake.stamp
bitbake-clean:
			rm -rf tmp/bitbake $(_bitbake_root)
			rm -f tmp/stamps/.bitbake.*

bitbake-validate:
			@f=tmp/stamps/.bitbake.fetch.stamp; \
			test ! -e "$$f" || { \
			v=$$(cat $$f); test x"$$v" = x${BITBAKE_REV}; } || { \
			echo "****"; \
			echo "**** BITBAKE revision mismatch; you have $$v but ${BITBAKE_REV} is expected"; \
			echo "**** please run"; \
			echo "**** cd '$(abspath .)' && make bitbake-clean && make init"; \
			echo "****"; \
			exit 1; \
			} >&2

tmp/stamps/.bitbake.fetch.stamp:
			@mkdir -p $(dir $@)
			$(SVN) co -r$(BITBAKE_REV) ${BITBAKE_URI}@$(BITBAKE_REV) tmp/bitbake
			@echo $(BITBAKE_REV) > $@

tmp/stamps/.bitbake.patch.stamp:	tmp/stamps/.bitbake.fetch.stamp
ifeq ($(QUILT),)
			cd tmp/bitbake && cat $(abs_top_srcdir)/recipes/bitbake/*.patch | patch -p0
else
			cd tmp/bitbake && $(QUILT) pop -a || :
			rm -rf tmp/bitbake/patches tmp/bitbake/.pc
			mkdir -p tmp/bitbake/patches
			cd tmp/bitbake && $(QUILT) import -p0 $(abs_top_srcdir)/recipes/bitbake/*.patch
			cd tmp/bitbake && $(QUILT) push -a
endif
			@touch $@

tmp/stamps/.bitbake.stamp:	tmp/stamps/.bitbake.patch.stamp
			cd tmp/bitbake && $(PYTHON) setup.py build
			cd tmp/bitbake && $(PYTHON) setup.py install --prefix=$(_bitbake_root) --install-purelib=$(_bitbake_root)/lib -O2

.gitignore:
			echo "${CFG_FILES}" | xargs -n1 echo > $@

$(_template_files):$(abs_top_builddir)/%:
			test ! -e $@
			mkdir -p $(dir $@)
			cp --preserve=mode,timestamps ${abs_top_srcdir}/$*.sample $@

%:			%.in
			@-rm -f $@.tmp $@
			$(SED) $(SED_EXPR) $< > $@.tmp
			mv $@.tmp $@
			chmod a-w $@

clean:
			rm -f set-env.in conf/local.conf bitbake

$(AUTOCONF_FILES): %:	config.status %.in
			$(abspath $<)

config.status:		$(abs_top_srcdir)/configure
			$(abspath $@) --recheck

@ENABLE_MAINTAINER_MODE_TRUE@$(abs_top_srcdir)/configure:	$(abs_top_srcdir)/configure.ac
@ENABLE_MAINTAINER_MODE_TRUE@					cd $(abs_top_srcdir) && autoreconf -i -f
