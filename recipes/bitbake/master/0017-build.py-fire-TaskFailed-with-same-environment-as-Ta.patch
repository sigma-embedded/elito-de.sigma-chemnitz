From 9fc809a812ac4bd58f7719e4138a49a05f20ff81 Mon Sep 17 00:00:00 2001
From: Enrico Scholz <enrico.scholz@sigma-chemnitz.de>
Date: Fri, 2 Nov 2012 18:09:04 +0100
Subject: [PATCH 17/17] build.py: fire TaskFailed with same environment as
 TaskStarted

The task-failed event handler can require task specific data or data
set by the corresponding task-started event (e.g. metrics data).

Patch shuffles around some bits of existing code so that this assumption
holds.

Signed-off-by: Enrico Scholz <enrico.scholz@sigma-chemnitz.de>
---
 lib/bb/build.py | 21 +++++++++++----------
 1 file changed, 11 insertions(+), 10 deletions(-)

diff --git a/lib/bb/build.py b/lib/bb/build.py
index 43790a6..6783e9d 100644
--- a/lib/bb/build.py
+++ b/lib/bb/build.py
@@ -292,20 +292,14 @@ def _task_data(fn, task, d):
     data.expandKeys(localdata)
     return localdata
 
-def _exec_task(fn, task, d, quieterr):
+def _exec_task(fn, task, localdata, quieterr):
     """Execute a BB 'task'
 
     Execution of a task involves a bit more setup than executing a function,
     running it with its own local metadata, and with some useful variables set.
     """
-    if not data.getVarFlag(task, 'task', d):
-        event.fire(TaskInvalid(task, d), d)
-        logger.error("No such task: %s" % task)
-        return 1
-
     logger.debug(1, "Executing task %s", task)
 
-    localdata = _task_data(fn, task, d)
     tempdir = localdata.getVar('T', True)
     if not tempdir:
         bb.fatal("T variable not set, unable to build")
@@ -424,19 +418,26 @@ def _exec_task(fn, task, d, quieterr):
     return 0
 
 def exec_task(fn, task, d):
+    if not data.getVarFlag(task, 'task', d):
+        event.fire(TaskInvalid(task, d), d)
+        logger.error("No such task: %s" % task)
+        return 1
+
+    localdata = _task_data(fn, task, d)
+
     try: 
         quieterr = False
         if d.getVarFlag(task, "quieterrors") is not None:
             quieterr = True
 
-        return _exec_task(fn, task, d, quieterr)
+        return _exec_task(fn, task, localdata, quieterr)
     except Exception:
         from traceback import format_exc
         if not quieterr:
             logger.error("Build of %s failed" % (task))
             logger.error(format_exc())
-            failedevent = TaskFailed(task, None, d, True)
-            event.fire(failedevent, d)
+            failedevent = TaskFailed(task, None, localdata, True)
+            event.fire(failedevent, localdata)
         return 1
 
 def stamp_internal(taskname, d, file_name):
-- 
1.7.11.7

