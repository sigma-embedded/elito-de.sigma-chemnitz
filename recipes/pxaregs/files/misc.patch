Index: pxaregs-1.14-r0/pxaregs.c
===================================================================
--- pxaregs-1.14-r0.orig/pxaregs.c
+++ pxaregs-1.14-r0/pxaregs.c
@@ -19,6 +19,7 @@
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <fcntl.h>
+#include <stdint.h>
 #include <ctype.h>
 
 // fd for /dev/mem
@@ -37,6 +38,11 @@ struct reg_info {
 
 
 static struct reg_info regs[] = {
+{ "BSCNTR0", 0x4800004C, 0, 0xffffffff, 'x', "BSCNTR0" },
+{ "BSCNTR1", 0x48000050, 0, 0xffffffff, 'x', "BSCNTR1" },
+{ "BSCNTR2", 0x4800005C, 0, 0xffffffff, 'x', "BSCNTR2" },
+{ "BSCNTR3", 0x48000060, 0, 0xffffffff, 'x', "BSCNTR3" },
+
 { "IBMR",      0x40301680,  0, 0xffffffff, 'x', "I2C Bus Monitor Register" },
 { "IBMR_SDAS", 0x40301680,  0, 0x00000001, 'x', "SDA Status" },
 { "IBMR_SCLS", 0x40301680,  1, 0x00000001, 'x', "SDA Status" },
@@ -83,6 +89,12 @@ static struct reg_info regs[] = {
 { "UP2OCR_HXOE", 0x40600020, 17, 1, 'x', "USB Port 2 Tranceiver OE" },
 { "UP2OCR_HXS",  0x40600020, 16, 1, 'x', "USB Port 2 Tranceiver Output Select" },
 { "UP2OCR_IDON", 0x40600020, 10, 1, 'x', "OTG ID Read Enable" },
+{ "UP2OCR_DMPUBE", 0x40600020, 7, 1, 'x', "USB Port 2 Transceiver D- Pull Up Bypass Enable" },
+{ "UP2OCR_DPPUBE", 0x40600020, 6, 1, 'x', "USB Port 2 Transceiver D+ Pull Up Bypass Enable" },
+{ "UP2OCR_DMPUE",  0x40600020, 5, 1, 'x', "USB Port 2 Transceiver D- Pull Up Enable" },
+{ "UP2OCR_DPPUE",  0x40600020, 4, 1, 'x', "USB Port 2 Transceiver D+ Pull Up Enable" },
+{ "UP2OCR_DMPDE",  0x40600020, 3, 1, 'x', "USB Port 2 Transceiver D- Pull Down Enable" },
+{ "UP2OCR_DPPDE",  0x40600020, 2, 1, 'x', "USB Port 2 Transceiver D+ Pull Down Enable" },
 
 { "HW_MCR",    0x41600010,  0, 0xffffffff, 'x', "HWUART Modem Control Register" },
 { "HW_MSR",    0x41600018,  0, 0xffffffff, 'x', "HWUART Modem Status Register" },
@@ -484,6 +496,39 @@ static struct reg_info regs[] = {
 { "GPLR2_83", 0x40E00008, 19, 0x00000001, 'd', "GPIO 83 level" },
 { "GPLR2_84", 0x40E00008, 20, 0x00000001, 'd', "GPIO 84 level" },
 #endif
+{ "GPLR3",     0x40E00100,  0, 0xffffffff, 'x', "GPIO Level Register 2 (4-8)" },
+{ "GPLR3_96",  0x40E00100, 0, 0x00000001, 'd', "GPIO 96 level" },
+{ "GPLR3_97",  0x40E00100, 1, 0x00000001, 'd', "GPIO 97 level" },
+{ "GPLR3_98",  0x40E00100, 2, 0x00000001, 'd', "GPIO 98 level" },
+{ "GPLR3_99",  0x40E00100, 3, 0x00000001, 'd', "GPIO 99 level" },
+{ "GPLR3_100", 0x40E00100, 4, 0x00000001, 'd', "GPIO 100 level" },
+{ "GPLR3_101", 0x40E00100, 5, 0x00000001, 'd', "GPIO 101 level" },
+{ "GPLR3_102", 0x40E00100, 6, 0x00000001, 'd', "GPIO 102 level" },
+{ "GPLR3_103", 0x40E00100, 7, 0x00000001, 'd', "GPIO 103 level" },
+{ "GPLR3_104", 0x40E00100, 8, 0x00000001, 'd', "GPIO 104 level" },
+{ "GPLR3_105", 0x40E00100, 9, 0x00000001, 'd', "GPIO 105 level" },
+{ "GPLR3_106", 0x40E00100, 10, 0x00000001, 'd', "GPIO 106 level" },
+{ "GPLR3_107", 0x40E00100, 11, 0x00000001, 'd', "GPIO 107 level" },
+{ "GPLR3_108", 0x40E00100, 12, 0x00000001, 'd', "GPIO 108 level" },
+{ "GPLR3_109", 0x40E00100, 13, 0x00000001, 'd', "GPIO 109 level" },
+{ "GPLR3_110", 0x40E00100, 14, 0x00000001, 'd', "GPIO 110 level" },
+{ "GPLR3_111", 0x40E00100, 15, 0x00000001, 'd', "GPIO 111 level" },
+{ "GPLR3_112", 0x40E00100, 16, 0x00000001, 'd', "GPIO 112 level" },
+{ "GPLR3_113", 0x40E00100, 17, 0x00000001, 'd', "GPIO 113 level" },
+{ "GPLR3_114", 0x40E00100, 18, 0x00000001, 'd', "GPIO 114 level" },
+{ "GPLR3_115", 0x40E00100, 19, 0x00000001, 'd', "GPIO 115 level" },
+{ "GPLR3_116", 0x40E00100, 20, 0x00000001, 'd', "GPIO 116 level" },
+{ "GPLR3_117", 0x40E00100, 21, 0x00000001, 'd', "GPIO 117 level" },
+{ "GPLR3_118", 0x40E00100, 22, 0x00000001, 'd', "GPIO 118 level" },
+{ "GPLR3_119", 0x40E00100, 23, 0x00000001, 'd', "GPIO 119 level" },
+{ "GPLR3_120", 0x40E00100, 24, 0x00000001, 'd', "GPIO 120 level" },
+{ "GPLR3_121", 0x40E00100, 25, 0x00000001, 'd', "GPIO 121 level" },
+{ "GPLR3_122", 0x40E00100, 26, 0x00000001, 'd', "GPIO 122 level" },
+{ "GPLR3_123", 0x40E00100, 27, 0x00000001, 'd', "GPIO 123 level" },
+{ "GPLR3_124", 0x40E00100, 28, 0x00000001, 'd', "GPIO 124 level" },
+{ "GPLR3_125", 0x40E00100, 29, 0x00000001, 'd', "GPIO 125 level" },
+{ "GPLR3_126", 0x40E00100, 30, 0x00000001, 'd', "GPIO 126 level" },
+{ "GPLR3_127", 0x40E00100, 31, 0x00000001, 'd', "GPIO 127 level" },
 
 { "GPDR0",    0x40E0000C,  0, 0xffffffff, 'x', "GPIO Direction Register 0 (4-9)" },
 { "GPDR0_0",  0x40E0000C,  0, 0x00000001, 'd', "GPIO 0 i/o direction (1=output)" },
@@ -576,6 +621,40 @@ static struct reg_info regs[] = {
 { "GPDR2_83", 0x40E00014, 19, 0x00000001, 'd', "GPIO 83 i/o direction (1=output)" },
 { "GPDR2_84", 0x40E00014, 20, 0x00000001, 'd', "GPIO 84 i/o direction (1=output)" },
 
+{ "GPDR3",     0x40E0010C,  0, 0xffffffff, 'x', "GPIO Direction Register 2 (4-9)" },
+{ "GPDR3_96",  0x40E0010C, 0, 0x00000001, 'd', "GPIO 96 i/o direction (1=output)" },
+{ "GPDR3_97",  0x40E0010C, 1, 0x00000001, 'd', "GPIO 97 i/o direction (1=output)" },
+{ "GPDR3_98",  0x40E0010C, 2, 0x00000001, 'd', "GPIO 98 i/o direction (1=output)" },
+{ "GPDR3_99",  0x40E0010C, 3, 0x00000001, 'd', "GPIO 99 i/o direction (1=output)" },
+{ "GPDR3_100", 0x40E0010C, 4, 0x00000001, 'd', "GPIO 100 i/o direction (1=output)" },
+{ "GPDR3_101", 0x40E0010C, 5, 0x00000001, 'd', "GPIO 101 i/o direction (1=output)" },
+{ "GPDR3_102", 0x40E0010C, 6, 0x00000001, 'd', "GPIO 102 i/o direction (1=output)" },
+{ "GPDR3_103", 0x40E0010C, 7, 0x00000001, 'd', "GPIO 103 i/o direction (1=output)" },
+{ "GPDR3_104", 0x40E0010C, 8, 0x00000001, 'd', "GPIO 104 i/o direction (1=output)" },
+{ "GPDR3_105", 0x40E0010C, 9, 0x00000001, 'd', "GPIO 105 i/o direction (1=output)" },
+{ "GPDR3_106", 0x40E0010C, 10, 0x00000001, 'd', "GPIO 106 i/o direction (1=output)" },
+{ "GPDR3_107", 0x40E0010C, 11, 0x00000001, 'd', "GPIO 107 i/o direction (1=output)" },
+{ "GPDR3_108", 0x40E0010C, 12, 0x00000001, 'd', "GPIO 108 i/o direction (1=output)" },
+{ "GPDR3_109", 0x40E0010C, 13, 0x00000001, 'd', "GPIO 109 i/o direction (1=output)" },
+{ "GPDR3_110", 0x40E0010C, 14, 0x00000001, 'd', "GPIO 110 i/o direction (1=output)" },
+{ "GPDR3_111", 0x40E0010C, 15, 0x00000001, 'd', "GPIO 111 i/o direction (1=output)" },
+{ "GPDR3_112", 0x40E0010C, 16, 0x00000001, 'd', "GPIO 112 i/o direction (1=output)" },
+{ "GPDR3_113", 0x40E0010C, 17, 0x00000001, 'd', "GPIO 113 i/o direction (1=output)" },
+{ "GPDR3_114", 0x40E0010C, 18, 0x00000001, 'd', "GPIO 114 i/o direction (1=output)" },
+{ "GPDR3_115", 0x40E0010C, 19, 0x00000001, 'd', "GPIO 115 i/o direction (1=output)" },
+{ "GPDR3_116", 0x40E0010C, 20, 0x00000001, 'd', "GPIO 116 i/o direction (1=output)" },
+{ "GPDR3_117", 0x40E0010C, 21, 0x00000001, 'd', "GPIO 117 i/o direction (1=output)" },
+{ "GPDR3_118", 0x40E0010C, 22, 0x00000001, 'd', "GPIO 118 i/o direction (1=output)" },
+{ "GPDR3_119", 0x40E0010C, 23, 0x00000001, 'd', "GPIO 119 i/o direction (1=output)" },
+{ "GPDR3_120", 0x40E0010C, 24, 0x00000001, 'd', "GPIO 120 i/o direction (1=output)" },
+{ "GPDR3_121", 0x40E0010C, 25, 0x00000001, 'd', "GPIO 121 i/o direction (1=output)" },
+{ "GPDR3_122", 0x40E0010C, 26, 0x00000001, 'd', "GPIO 122 i/o direction (1=output)" },
+{ "GPDR3_123", 0x40E0010C, 27, 0x00000001, 'd', "GPIO 123 i/o direction (1=output)" },
+{ "GPDR3_124", 0x40E0010C, 28, 0x00000001, 'd', "GPIO 124 i/o direction (1=output)" },
+{ "GPDR3_125", 0x40E0010C, 29, 0x00000001, 'd', "GPIO 125 i/o direction (1=output)" },
+{ "GPDR3_126", 0x40E0010C, 30, 0x00000001, 'd', "GPIO 126 i/o direction (1=output)" },
+{ "GPDR3_127", 0x40E0010C, 31, 0x00000001, 'd', "GPIO 127 i/o direction (1=output)" },
+
 { "GPSR0",    0x40E00018,  0, 0xffffffff, 'x', "GPIO Set Register 0 (4-10)" },
 { "GPSR0_0",  0x40E00018,  0, 0x00000001, 'd', "GPIO 0 set" },
 { "GPSR0_1",  0x40E00018,  1, 0x00000001, 'd', "GPIO 1 set" },
@@ -666,6 +745,51 @@ static struct reg_info regs[] = {
 { "GPSR2_82", 0x40E00020, 18, 0x00000001, 'd', "GPIO 82 set" },
 { "GPSR2_83", 0x40E00020, 19, 0x00000001, 'd', "GPIO 83 set" },
 { "GPSR2_84", 0x40E00020, 20, 0x00000001, 'd', "GPIO 84 set" },
+{ "GPSR2_85", 0x40E00020, 21, 0x00000001, 'd', "GPIO 85 set" },
+{ "GPSR2_86", 0x40E00020, 22, 0x00000001, 'd', "GPIO 86 set" },
+{ "GPSR2_87", 0x40E00020, 23, 0x00000001, 'd', "GPIO 87 set" },
+{ "GPSR2_88", 0x40E00020, 24, 0x00000001, 'd', "GPIO 88 set" },
+{ "GPSR2_89", 0x40E00020, 25, 0x00000001, 'd', "GPIO 89 set" },
+{ "GPSR2_90", 0x40E00020, 26, 0x00000001, 'd', "GPIO 90 set" },
+{ "GPSR2_91", 0x40E00020, 27, 0x00000001, 'd', "GPIO 91 set" },
+{ "GPSR2_92", 0x40E00020, 28, 0x00000001, 'd', "GPIO 92 set" },
+{ "GPSR2_93", 0x40E00020, 29, 0x00000001, 'd', "GPIO 93 set" },
+{ "GPSR2_94", 0x40E00020, 30, 0x00000001, 'd', "GPIO 94 set" },
+{ "GPSR2_95", 0x40E00020, 31, 0x00000001, 'd', "GPIO 95 set" },
+
+{ "GPSR3",    0x40E00118,  0, 0xffffffff, 'x', "GPIO Set Register 3 (4-11)" },
+{ "GPSR3_96", 0x40E00118, 0, 0x00000001, 'd', "GPIO 96 set" },
+{ "GPSR3_97", 0x40E00118, 1, 0x00000001, 'd', "GPIO 97 set" },
+{ "GPSR3_98", 0x40E00118, 2, 0x00000001, 'd', "GPIO 98 set" },
+{ "GPSR3_99", 0x40E00118, 3, 0x00000001, 'd', "GPIO 99 set" },
+{ "GPSR3_100", 0x40E00118, 4, 0x00000001, 'd', "GPIO 100 set" },
+{ "GPSR3_101", 0x40E00118, 5, 0x00000001, 'd', "GPIO 101 set" },
+{ "GPSR3_102", 0x40E00118, 6, 0x00000001, 'd', "GPIO 102 set" },
+{ "GPSR3_103", 0x40E00118, 7, 0x00000001, 'd', "GPIO 103 set" },
+{ "GPSR3_104", 0x40E00118, 8, 0x00000001, 'd', "GPIO 104 set" },
+{ "GPSR3_105", 0x40E00118, 9, 0x00000001, 'd', "GPIO 105 set" },
+{ "GPSR3_106", 0x40E00118, 10, 0x00000001, 'd', "GPIO 106 set" },
+{ "GPSR3_107", 0x40E00118, 11, 0x00000001, 'd', "GPIO 107 set" },
+{ "GPSR3_108", 0x40E00118, 12, 0x00000001, 'd', "GPIO 108 set" },
+{ "GPSR3_109", 0x40E00118, 13, 0x00000001, 'd', "GPIO 109 set" },
+{ "GPSR3_110", 0x40E00118, 14, 0x00000001, 'd', "GPIO 110 set" },
+{ "GPSR3_111", 0x40E00118, 15, 0x00000001, 'd', "GPIO 111 set" },
+{ "GPSR3_112", 0x40E00118, 16, 0x00000001, 'd', "GPIO 112 set" },
+{ "GPSR3_113", 0x40E00118, 17, 0x00000001, 'd', "GPIO 113 set" },
+{ "GPSR3_114", 0x40E00118, 18, 0x00000001, 'd', "GPIO 114 set" },
+{ "GPSR3_115", 0x40E00118, 19, 0x00000001, 'd', "GPIO 115 set" },
+{ "GPSR3_116", 0x40E00118, 20, 0x00000001, 'd', "GPIO 116 set" },
+{ "GPSR3_117", 0x40E00118, 21, 0x00000001, 'd', "GPIO 117 set" },
+{ "GPSR3_118", 0x40E00118, 22, 0x00000001, 'd', "GPIO 118 set" },
+{ "GPSR3_119", 0x40E00118, 23, 0x00000001, 'd', "GPIO 119 set" },
+{ "GPSR3_120", 0x40E00118, 24, 0x00000001, 'd', "GPIO 120 set" },
+{ "GPSR3_121", 0x40E00118, 25, 0x00000001, 'd', "GPIO 121 set" },
+{ "GPSR3_122", 0x40E00118, 26, 0x00000001, 'd', "GPIO 122 set" },
+{ "GPSR3_123", 0x40E00118, 27, 0x00000001, 'd', "GPIO 123 set" },
+{ "GPSR3_124", 0x40E00118, 28, 0x00000001, 'd', "GPIO 124 set" },
+{ "GPSR3_125", 0x40E00118, 29, 0x00000001, 'd', "GPIO 125 set" },
+{ "GPSR3_126", 0x40E00118, 30, 0x00000001, 'd', "GPIO 126 set" },
+{ "GPSR3_127", 0x40E00118, 31, 0x00000001, 'd', "GPIO 127 set" },
 
 { "GPCR0",    0x40E00024,  0, 0xffffffff, 'x', "GPIO Clear Register 0 (4-11)" },
 { "GPCR0_0",  0x40E00024,  0, 0x00000001, 'd', "GPIO 0 clear" },
@@ -757,6 +881,51 @@ static struct reg_info regs[] = {
 { "GPCR2_82", 0x40E0002C, 18, 0x00000001, 'd', "GPIO 82 clear" },
 { "GPCR2_83", 0x40E0002C, 19, 0x00000001, 'd', "GPIO 83 clear" },
 { "GPCR2_84", 0x40E0002C, 20, 0x00000001, 'd', "GPIO 84 clear" },
+{ "GPCR2_85", 0x40E0002C, 21, 0x00000001, 'd', "GPIO 85 clear" },
+{ "GPCR2_86", 0x40E0002C, 22, 0x00000001, 'd', "GPIO 86 clear" },
+{ "GPCR2_87", 0x40E0002C, 23, 0x00000001, 'd', "GPIO 87 clear" },
+{ "GPCR2_88", 0x40E0002C, 24, 0x00000001, 'd', "GPIO 88 clear" },
+{ "GPCR2_89", 0x40E0002C, 25, 0x00000001, 'd', "GPIO 89 clear" },
+{ "GPCR2_90", 0x40E0002C, 26, 0x00000001, 'd', "GPIO 90 clear" },
+{ "GPCR2_91", 0x40E0002C, 27, 0x00000001, 'd', "GPIO 91 clear" },
+{ "GPCR2_92", 0x40E0002C, 28, 0x00000001, 'd', "GPIO 92 clear" },
+{ "GPCR2_93", 0x40E0002C, 29, 0x00000001, 'd', "GPIO 93 clear" },
+{ "GPCR2_94", 0x40E0002C, 30, 0x00000001, 'd', "GPIO 94 clear" },
+{ "GPCR2_95", 0x40E0002C, 31, 0x00000001, 'd', "GPIO 95 clear" },
+
+{ "GPCR3",     0x40E00124, 0, 0xffffffff, 'x', "GPIO Clear Register 3 (4-12)" },
+{ "GPCR3_96",  0x40E00124, 0, 0x00000001, 'd', "GPIO 96 clear" },
+{ "GPCR3_97",  0x40E00124, 1, 0x00000001, 'd', "GPIO 97 clear" },
+{ "GPCR3_98",  0x40E00124, 2, 0x00000001, 'd', "GPIO 98 clear" },
+{ "GPCR3_99",  0x40E00124, 3, 0x00000001, 'd', "GPIO 99 clear" },
+{ "GPCR3_100", 0x40E00124, 4, 0x00000001, 'd', "GPIO 100 clear" },
+{ "GPCR3_101", 0x40E00124, 5, 0x00000001, 'd', "GPIO 101 clear" },
+{ "GPCR3_102", 0x40E00124, 6, 0x00000001, 'd', "GPIO 102 clear" },
+{ "GPCR3_103", 0x40E00124, 7, 0x00000001, 'd', "GPIO 103 clear" },
+{ "GPCR3_104", 0x40E00124, 8, 0x00000001, 'd', "GPIO 104 clear" },
+{ "GPCR3_105", 0x40E00124, 9, 0x00000001, 'd', "GPIO 105 clear" },
+{ "GPCR3_106", 0x40E00124, 10, 0x00000001, 'd', "GPIO 106 clear" },
+{ "GPCR3_107", 0x40E00124, 11, 0x00000001, 'd', "GPIO 107 clear" },
+{ "GPCR3_108", 0x40E00124, 12, 0x00000001, 'd', "GPIO 108 clear" },
+{ "GPCR3_109", 0x40E00124, 13, 0x00000001, 'd', "GPIO 109 clear" },
+{ "GPCR3_110", 0x40E00124, 14, 0x00000001, 'd', "GPIO 110 clear" },
+{ "GPCR3_111", 0x40E00124, 15, 0x00000001, 'd', "GPIO 111 clear" },
+{ "GPCR3_112", 0x40E00124, 16, 0x00000001, 'd', "GPIO 112 clear" },
+{ "GPCR3_113", 0x40E00124, 17, 0x00000001, 'd', "GPIO 113 clear" },
+{ "GPCR3_114", 0x40E00124, 18, 0x00000001, 'd', "GPIO 114 clear" },
+{ "GPCR3_115", 0x40E00124, 19, 0x00000001, 'd', "GPIO 115 clear" },
+{ "GPCR3_116", 0x40E00124, 20, 0x00000001, 'd', "GPIO 116 clear" },
+{ "GPCR3_117", 0x40E00124, 21, 0x00000001, 'd', "GPIO 117 clear" },
+{ "GPCR3_118", 0x40E00124, 22, 0x00000001, 'd', "GPIO 118 clear" },
+{ "GPCR3_119", 0x40E00124, 23, 0x00000001, 'd', "GPIO 119 clear" },
+{ "GPCR3_120", 0x40E00124, 24, 0x00000001, 'd', "GPIO 120 clear" },
+{ "GPCR3_121", 0x40E00124, 25, 0x00000001, 'd', "GPIO 121 clear" },
+{ "GPCR3_122", 0x40E00124, 26, 0x00000001, 'd', "GPIO 122 clear" },
+{ "GPCR3_123", 0x40E00124, 27, 0x00000001, 'd', "GPIO 123 clear" },
+{ "GPCR3_124", 0x40E00124, 28, 0x00000001, 'd', "GPIO 124 clear" },
+{ "GPCR3_125", 0x40E00124, 29, 0x00000001, 'd', "GPIO 125 clear" },
+{ "GPCR3_126", 0x40E00124, 30, 0x00000001, 'd', "GPIO 126 clear" },
+{ "GPCR3_127", 0x40E00124, 31, 0x00000001, 'd', "GPIO 127 clear" },
 
 { "GRER0",    0x40E00030,  0, 0xffffffff, 'x', "GPIO Raising Edge Detect Enable Register 0 (4-13)" },
 { "GRER0_0",  0x40E00030,  0, 0x00000001, 'd', "GPIO 0 raising edge detect enabled" },
@@ -1103,7 +1272,7 @@ static struct reg_info regs[] = {
 { "GAFR1U_62", 0x40E00060, 28, 0x00000003, 'x', "GPIO 62 alternate function select" },
 { "GAFR1U_63", 0x40E00060, 30, 0x00000003, 'x', "GPIO 63 alternate function select" },
 
-{ "GAFR2L",    0x40E00064,  0, 0xffffffff, 'x', "GPIO Alternate Function Register 2 Lower (4-19)" },
+{ "GAFR2L",    0x40E00064,  0, 0xffffffff, 'x', "GPIO Alternate Function Register 2 Lower (64-79)" },
 { "GAFR2L_64", 0x40E00064,  0, 0x00000003, 'x', "GPIO 64 alternate function select" },
 { "GAFR2L_65", 0x40E00064,  2, 0x00000003, 'x', "GPIO 65 alternate function select" },
 { "GAFR2L_66", 0x40E00064,  4, 0x00000003, 'x', "GPIO 66 alternate function select" },
@@ -1121,12 +1290,53 @@ static struct reg_info regs[] = {
 { "GAFR2L_78", 0x40E00064, 28, 0x00000003, 'x', "GPIO 78 alternate function select" },
 { "GAFR2L_79", 0x40E00064, 30, 0x00000003, 'x', "GPIO 79 alternate function select" },
 
-{ "GAFR2U",    0x40E00068,  0, 0xffffffff, 'x', "GPIO Alternate Function Register 2 Upper (4-19)" },
+{ "GAFR2U",    0x40E00068,  0, 0xffffffff, 'x', "GPIO Alternate Function Register 2 Upper (80-95)" },
 { "GAFR2U_80", 0x40E00068,  0, 0x00000003, 'x', "GPIO 80 alternate function select" },
 { "GAFR2U_81", 0x40E00068,  2, 0x00000003, 'x', "GPIO 81 alternate function select" },
 { "GAFR2U_82", 0x40E00068,  4, 0x00000003, 'x', "GPIO 82 alternate function select" },
 { "GAFR2U_83", 0x40E00068,  6, 0x00000003, 'x', "GPIO 83 alternate function select" },
 { "GAFR2U_84", 0x40E00068,  8, 0x00000003, 'x', "GPIO 84 alternate function select" },
+{ "GAFR2U_85", 0x40E00068, 10, 0x00000003, 'x', "GPIO 85 alternate function select" },
+{ "GAFR2U_86", 0x40E00068, 12, 0x00000003, 'x', "GPIO 86 alternate function select" },
+{ "GAFR2U_87", 0x40E00068, 14, 0x00000003, 'x', "GPIO 87 alternate function select" },
+{ "GAFR2U_88", 0x40E00068, 16, 0x00000003, 'x', "GPIO 88 alternate function select" },
+{ "GAFR2U_89", 0x40E00068, 18, 0x00000003, 'x', "GPIO 89 alternate function select" },
+{ "GAFR2U_90", 0x40E00068, 20, 0x00000003, 'x', "GPIO 90 alternate function select" },
+{ "GAFR2U_91", 0x40E00068, 22, 0x00000003, 'x', "GPIO 91 alternate function select" },
+{ "GAFR2U_92", 0x40E00068, 24, 0x00000003, 'x', "GPIO 92 alternate function select" },
+{ "GAFR2U_93", 0x40E00068, 26, 0x00000003, 'x', "GPIO 93 alternate function select" },
+{ "GAFR2U_94", 0x40E00068, 28, 0x00000003, 'x', "GPIO 94 alternate function select" },
+{ "GAFR2U_95", 0x40E00068, 30, 0x00000003, 'x', "GPIO 95 alternate function select" },
+
+
+{ "GAFR3L",     0x40E0006c,  0, 0xffffffff, 'x', "GPIO Alternate Function Register 3 Lower (96-111)" },
+{ "GAFR3L_96",  0x40E0006c,  0, 0x00000003, 'x', "GPIO  96 alternate function select" },
+{ "GAFR3L_97",  0x40E0006c,  2, 0x00000003, 'x', "GPIO  97 alternate function select" },
+{ "GAFR3L_98",  0x40E0006c,  4, 0x00000003, 'x', "GPIO  98 alternate function select" },
+{ "GAFR3L_99",  0x40E0006c,  6, 0x00000003, 'x', "GPIO  99 alternate function select" },
+{ "GAFR3L_100", 0x40E0006c,  8, 0x00000003, 'x', "GPIO 100 alternate function select" },
+{ "GAFR3L_101", 0x40E0006c, 10, 0x00000003, 'x', "GPIO 101 alternate function select" },
+{ "GAFR3L_102", 0x40E0006c, 12, 0x00000003, 'x', "GPIO 102 alternate function select" },
+{ "GAFR3L_103", 0x40E0006c, 14, 0x00000003, 'x', "GPIO 103 alternate function select" },
+{ "GAFR3L_104", 0x40E0006c, 16, 0x00000003, 'x', "GPIO 104 alternate function select" },
+{ "GAFR3L_105", 0x40E0006c, 18, 0x00000003, 'x', "GPIO 105 alternate function select" },
+{ "GAFR3L_106", 0x40E0006c, 20, 0x00000003, 'x', "GPIO 106 alternate function select" },
+{ "GAFR3L_107", 0x40E0006c, 22, 0x00000003, 'x', "GPIO 107 alternate function select" },
+{ "GAFR3L_108", 0x40E0006c, 24, 0x00000003, 'x', "GPIO 108 alternate function select" },
+{ "GAFR3L_109", 0x40E0006c, 26, 0x00000003, 'x', "GPIO 109 alternate function select" },
+{ "GAFR3L_110", 0x40E0006c, 28, 0x00000003, 'x', "GPIO 110 alternate function select" },
+{ "GAFR3L_111", 0x40E0006c, 30, 0x00000003, 'x', "GPIO 111 alternate function select" },
+
+{ "GAFR3U",     0x40E00070,  0, 0xffffffff, 'x', "GPIO Alternate Function Register 3 Upper (112-120)" },
+{ "GAFR3L_112", 0x40E00070,  0, 0x00000003, 'x', "GPIO 112 alternate function select" },
+{ "GAFR3L_113", 0x40E00070,  2, 0x00000003, 'x', "GPIO 113 alternate function select" },
+{ "GAFR3L_114", 0x40E00070,  4, 0x00000003, 'x', "GPIO 114 alternate function select" },
+{ "GAFR3L_115", 0x40E00070,  6, 0x00000003, 'x', "GPIO 115 alternate function select" },
+{ "GAFR3L_116", 0x40E00070,  8, 0x00000003, 'x', "GPIO 116 alternate function select" },
+{ "GAFR3L_117", 0x40E00070, 10, 0x00000003, 'x', "GPIO 117 alternate function select" },
+{ "GAFR3L_118", 0x40E00070, 12, 0x00000003, 'x', "GPIO 118 alternate function select" },
+{ "GAFR3L_119", 0x40E00070, 14, 0x00000003, 'x', "GPIO 119 alternate function select" },
+{ "GAFR3L_120", 0x40E00070, 16, 0x00000003, 'x', "GPIO 120 alternate function select" },
 
 { "ICMR",      0x40D00004,  0, 0xffffffff, 'x', "Interrupt Controller Mask Register (4-22)" },
 { "ICMR_IM7",  0x40D00004,  7, 0x00000001, 'x', "Pending IRQ 7 (HWUART) unmasked?" },
@@ -1288,6 +1498,11 @@ static struct reg_info regs[] = {
 { "LCCR0_PDD", 0x44000000, 12, 0x000000FF, 'd', "LCD palette DMA request delay" },
 { "LCCR0_BM",  0x44000000, 20, 0x00000001, 'd', "LCD branch start IRQ disable" },
 { "LCCR0_OUM", 0x44000000, 21, 0x00000001, 'd', "LCD fifo underrun IRQ disable" },
+{ "LCCR0_LCDT",  0x44000000, 22, 0x00000001, 'd', "LCD Panel Type" },
+{ "LCCR0_RDSTM", 0x44000000, 23, 0x00000001, 'd', "LCD Read Status Interrupt Mask" },
+{ "LCCR0_CMDIM", 0x44000000, 24, 0x00000001, 'd', "LCD Command Interrupt Mask" },
+{ "LCCR0_OUC",   0x44000000, 25, 0x00000001, 'd', "LCD Overlay Underlay Control Bit" },
+{ "LCCR0_LDDALT", 0x44000000, 27, 0x00000001, 'd', "LCD Alternate Mapping Control Bit" },
 
 { "LCCR1",     0x44000004,  0, 0xffffffff, 'x', "LCD Controller Control Register 1 (7-26)" },
 { "LCCR1_PPL", 0x44000004,  0, 0x000003ff, 'd', "LCD pixels per line (+1)" },
@@ -1311,11 +1526,24 @@ static struct reg_info regs[] = {
 { "LCCR3_OEP", 0x4400000C, 23, 0x00000001, 'd', "LCD L_BIAS output enable active low" },
 { "LCCR3_BPP", 0x4400000C, 24, 0x00000007, '<', "LCD bits per pixel" },
 { "LCCR3_DPC", 0x4400000C, 27, 0x00000007, 'd', "LCD double pixel clock rate at L_PCLK" },
+{ "LCCR3_BPP3",  0x4400000C, 28, 0x00000001, 'd', "LCD Bits per Pixel" },
+{ "LCCR3_PDFOR", 0x4400000C, 29, 0x00000007, 'd', "LCD Pixel Data Format" },
 
+{ "LCCR4",     0x44000010,  0, 0xffffffff, 'x', "LCD Controller Control Register 4 (7-31)" },
+{ "LCCR4_K1",  0x44000010,  0, 0x00000007, 'd', "LCD Multiplication Constant for Red for HT" },
+{ "LCCR4_K2",  0x44000010,  3, 0x00000007, 'd', "LCD Multiplication Constant for Blue for HT" },
+{ "LCCR4_K3",  0x44000010,  6, 0x00000007, 'd', "LCD Multiplication Constant for Green for HT" },
+{ "LCCR4_PAL_FOR", 0x44000010,  15, 0x00000003, 'd', "LCD Palette Data Format" },
+{ "LCCR4_13M_PCD", 0x44000010,  17, 0x000000ff, 'd', "LCD 13M mode Pixel Clock Divisor" },
+{ "LCCR4_13M_EN",  0x44000010,  25, 0x00000001, 'd', "LCD 13M mode Pixel Clock Divisor enable" },
+{ "LCCR4_PCDDIV",  0x44000010,  31, 0x00000001, 'd', "LCD PCD Divisor Selection" },
+
+{ "LCCR5",     0x44000014,  0, 0xffffffff, 'x', "LCD Controller Control Register 5 (7-31)" },
 
 { "FBR0",      0x44000020,  0, 0xffffffff, 'x', "FBR0" },
 { "FBR1",      0x44000020,  0, 0xffffffff, 'x', "FBR1" },
-{ "LCSR",      0x44000038,  0, 0xffffffff, 'x', "LCD Controller Status Register (7-40)" },
+{ "LCSR1",     0x44000034,  0, 0xffffffff, 'x', "LCD Controller Status Register 1 (7-40)" },
+{ "LCSR0",     0x44000038,  0, 0xffffffff, 'x', "LCD Controller Status Register 0 (7-40)" },
 { "LIIDR",     0x4400003C,  0, 0xffffffff, 'x', "LCD Controller Interrupt ID Register (7-41)" },
 // TODO
 
@@ -1967,7 +2195,12 @@ int main(int argc, char *argv[])
     }
 
     if (argc == 3) {
-	sscanf(argv[2],"%i",&val);
+      printf ( "Setting: %s, %s\n", argv[1], argv[2]);
+      if(argv[2][0] == '0' && argv[2][1] == 'x') {
+	sscanf(argv[2], "%x", &val);
+      } else {
+	sscanf(argv[2], "%i", &val);
+      }
 	setreg(argv[1], val);
 	return 0;
     }
