#! /bin/bash

W_=${W:-@ELITO_BUILDBASE_DIR@}
export -n W_
case $W_ in
  /*)	;;
  *)	W_=@abs_top_builddir@/$W_;;
esac

_s=$W_/sysroots/`uname -m`-linux
: ${PYTHON:='@PYTHON@'}
: ${BITBAKE_UI='@BITBAKE_UI@'}
PATH=$PATH:/usr/local/sbin:/usr/sbin:/sbin:$_s/usr/bin
CCACHE_DIR=$W_/cache/ccache
INSTALL='@INSTALL@'
BBPATH='@abs_top_builddir@'
ELITO_METRICS_ID=$$
ELITO_PROJECT_NAME='@PROJECT_NAME@'
ELITO_SCRIPTS_DIR='@abs_top_srcdir@/scripts'
ELITO_OOM_ADJUST='@ELITO_OOM_ADJUST@'
ABRT_IGNORE_ALL=1

export ABRT_IGNORE_ALL

LC_CTYPE="en_US.UTF-8"

unset LC_ALL
export LC_CTYPE

@ENABLE_SSTATE_DIR_TRUE@SSTATE_DIR='@SSTATE_DIR@'

# use fixed 'ccache' for now; this string is hardcoded at some places
# and do not expect full qualified paths hence
#@ENABLE_CCACHE_TRUE@export CCACHE='@CCACHE@'
@ENABLE_CCACHE_TRUE@export CCACHE='ccache'
@ENABLE_CCACHE_FALSE@unset CCACHE

@ENABLE_CGROUPS_TRUE@ELITO_CGROUP_NAME="elito_@PROJECT_NAME@"
@ENABLE_CGROUPS_FALSE@ELITO_CGROUP_NAME=

for i in "${!_@}" \
    ENV OPTS MAKEFLAGS MAKEOVERRIDES POSIXLY_CORRECT \
    ACLOCAL_FLAGS OSTYPE HOSTTYPE ARCH CPU BOARD VENDOR SOC \
    LD_LIBRARY_PATH LD_PRELOAD MAIL MAILCHECK MAILPATH \
    DIRSTACK OPTERR OPTIND SHLVL HOST HOSTFILE \
    PKG_CONFIG_PATH PYTHONSTARTUP PROFILEREAD \
    DESKTOP_SESSION \
; do
	eval unset "$i"
done

export BITBAKE_UI
export ELITO_METRICS_ID
export CCACHE_DIR BBPATH

# TODO: remove legacy ~/.elito-set-env after 2018-01-01
for f in '@abs_top_builddir@'/set-env.local $HOME/.config/elito/set-env $HOME/.elito-set-env; do
    test -r "$f" || continue
    . "$f"
done

exec_secure() {
    if test -z "$ELITO_NO_SECWRAP_CMD"; then
	exec @SECWRAP_CMD@ "$@"
    else
	unset ELITO_NO_SECWRAP_CMD
	exec "$@"
    fi
}
