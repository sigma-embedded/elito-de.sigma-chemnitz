inherit elito-dtree-base elito-machdata

DEPENDS += "libxslt-native elito-devicetree"

FILES_${PN}-dev += "${datadir}/mach-${MACHINE}/*.dcd"

EXTRA_OEMAKE += "\
  BAREBOX_DTB_EXTRA_PATH='${STAGING_MACHDATADIR}' \
"

def get_dcd_names(d):
    variants = oe.data.typed_value('MACHINE_VARIANTS', d)
    res = []
    for v in variants:
        (n,c,m) = v.split(':')
        res.append('flash-header-%s-%s.dcd' % (n,m))

    return ' '.join(res)

_BAREBOX_DCD_FILES[vardeps] += "MACHINE_VARIANTS"
_BAREBOX_DCD_FILES = "${@get_dcd_names(d)}"

BAREBOX_DCD_FILES ?= "${_BAREBOX_DCD_FILES}"

do_register_dcd() {
    cd ${S}/arch/arm/boards/${UBOOT_BOARD}
    sed -i '/##### autogenerated lines/,$d' Makefile
    cat <<"EOF" >> Makefile
##### autogenerated lines
extra-y += ${BAREBOX_DCD_FILES}
EOF
    cd -
}
addtask do_register_dcd after do_configure before do_compile

do_install() {
    # some sanity checks to verify environment
    test -n "${UBOOT_BOARD}"
    test -d arch/arm/boards/${UBOOT_BOARD}

    install -d -m 0755 ${D}/${datadir}/mach-${MACHINE}

    for i in arch/arm/boards/${UBOOT_BOARD}/*.dcd; do
        install -p -m 0644 "$i" ${D}/${datadir}/mach-${MACHINE}/
    done
}

deploy_file() {
    dst="${1%.*}-$2.${1##.*}"
    install -D -p -m 0444 "$1" "${DEPLOYDIR}/$dst"
    rm -f "${DEPLOYDIR}/$1"
    ln -s "$dst" "${DEPLOYDIR}/$1"
}

do_deploy () {
    gitrev=`git ls-remote . HEAD | sed '1s/^\(........\).*/\1/p;d'`

    deploy_file barebox "${gitrev}"

    cd images
    for i in barebox-*.img; do
	deploy_file "$i" "${gitrev}"
    done
    cd -
}
