Index: busybox-1.17.1/util-linux/mdev.c
===================================================================
--- busybox-1.17.1.orig/util-linux/mdev.c
+++ busybox-1.17.1/util-linux/mdev.c
@@ -289,25 +289,53 @@ static void make_device(char *path, int 
 						unsigned i, n;
 
 						/* substitute %1..9 with off[1..9], if any */
-						n = 0;
 						s = a;
-						while (*s)
-							if (*s++ == '%')
-								n++;
-
-						p = alias = xzalloc(strlen(a) + n * strlen(str_to_match));
+						p = alias = xzalloc(PATH_MAX + 1);
 						s = a + 1;
-						while (*s) {
+						while (*s && p <= alias + PATH_MAX) {
 							*p = *s;
-							if ('%' == *s) {
+							switch (*s) {
+							case '%':
+								/* substitute %1..9 with off[1..9], if any */
 								i = (s[1] - '0');
 								if (i <= 9 && off[i].rm_so >= 0) {
-									n = off[i].rm_eo - off[i].rm_so;
+									n = MIN(PATH_MAX - (p - alias),
+										off[i].rm_eo - off[i].rm_so);
 									strncpy(p, str_to_match + off[i].rm_so, n);
 									p += n - 1;
 									s++;
 								}
+								break;
+							case '$': {
+								/* substitute ${VARNAME} strings */
+								char *eov = (s[1] == '{') ? strchr(s, '}') : NULL;
+								char *var ;
+
+								if (!eov)
+									var = NULL;
+								else {
+									*eov = '\0';
+									var  = getenv(s+2);
+								}
+
+								if (!var)
+									*p = '\0';
+								else {
+									n = MIN(PATH_MAX - (p-alias), strlen(var));
+									strncpy(p, var, n);
+									p += n;
+								}
+
+								if (eov) {
+									s = eov;
+									p -= 1;
+								}
+								break;
 							}
+							default:
+								break;
+							}
+
 							p++;
 							s++;
 						}
