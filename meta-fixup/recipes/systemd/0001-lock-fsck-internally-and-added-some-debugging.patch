From 47d0277128ad2f32511cebd8d50846088c31fcb9 Mon Sep 17 00:00:00 2001
From: Enrico Scholz <enrico.scholz@informatik.tu-chemnitz.de>
Date: Sun, 30 Dec 2012 19:32:22 +0100
Subject: [PATCH] lock fsck internally and added some debugging

---
 src/fsck/fsck.c | 39 ++++++++++++++++++++++++++++++++++++++-
 1 Datei geändert, 38 Zeilen hinzugefügt(+), 1 Zeile entfernt(-)

diff --git a/src/fsck/fsck.c b/src/fsck/fsck.c
index 058f34d..fb900dc 100644
--- a/src/fsck/fsck.c
+++ b/src/fsck/fsck.c
@@ -241,6 +241,21 @@ static int process_progress(int fd) {
         return 0;
 }
 
+static void dump_locks()
+{
+        int     rc;
+        char    *data = NULL;
+        size_t  cnt = 0;
+
+        rc = read_full_file("/proc/locks", &data, &cnt);
+        if (rc < 0)
+                log_debug("no lock information available: %s", strerror(rc));
+        else
+                log_dump(LOG_DEBUG, data);
+
+        free(data);
+}
+
 int main(int argc, char *argv[]) {
         const char *cmdline[9];
         int i = 0, r = EXIT_FAILURE, q;
@@ -252,6 +267,7 @@ int main(int argc, char *argv[]) {
         bool root_directory;
         int progress_pipe[2] = { -1, -1 };
         char dash_c[2+10+1];
+        int fd = -1;
 
         if (argc > 2) {
                 log_error("This program expects one or no arguments.");
@@ -323,7 +339,6 @@ int main(int argc, char *argv[]) {
         cmdline[i++] = "/sbin/fsck";
         cmdline[i++] = "-a";
         cmdline[i++] = "-T";
-        cmdline[i++] = "-l";
 
         if (!root_directory)
                 cmdline[i++] = "-M";
@@ -340,6 +355,22 @@ int main(int argc, char *argv[]) {
         cmdline[i++] = device;
         cmdline[i++] = NULL;
 
+        fd = open(device, O_RDWR | O_CLOEXEC);
+        if (fd < 0) {
+                log_error("failed to open device: %m");
+                goto finish;
+        }
+
+        if (flock(fd, LOCK_EX | LOCK_NB) < 0) {
+                log_debug("failed to lock device non-blocking: %m");
+                dump_locks();
+
+                if (flock(fd, LOCK_EX) < 0) {
+                        log_error("failed to lock device: %m");
+                        goto finish;
+                }
+        }
+
         pid = fork();
         if (pid < 0) {
                 log_error("fork(): %m");
@@ -368,6 +399,9 @@ int main(int argc, char *argv[]) {
                 goto finish;
         }
 
+        close(fd);
+        fd = -1;
+
         if (status.si_code != CLD_EXITED || (status.si_status & ~1)) {
 
                 if (status.si_code == CLD_KILLED || status.si_code == CLD_DUMPED)
@@ -395,6 +429,9 @@ int main(int argc, char *argv[]) {
                 touch("/run/systemd/quotacheck");
 
 finish:
+        if (fd >= 0)
+                close(fd);
+
         if (udev_device)
                 udev_device_unref(udev_device);
 
-- 
1.7.11.7

