From 9dcf921f0108b4401bf9843801630dd56d3d0fca Mon Sep 17 00:00:00 2001
From: Enrico Scholz <enrico.scholz@sigma-chemnitz.de>
Date: Thu, 8 Nov 2012 13:00:37 +0100
Subject: [PATCH] added '--noipconfig' option

---
 include/inet.h |   2 +
 src/connman.h  |   3 +-
 src/device.c   |  24 +++++++++++-
 src/inet.c     | 114 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 src/main.c     |   5 ++-
 5 files changed, 145 insertions(+), 3 deletions(-)

Index: connman-1.17/include/inet.h
===================================================================
--- connman-1.17.orig/include/inet.h
+++ connman-1.17/include/inet.h
@@ -81,6 +81,9 @@ int connman_inet_check_ipaddress(const c
 bool connman_inet_check_hostname(const char *ptr, size_t len);
 bool connman_inet_is_ipv6_supported();
 
+void __connman_inet_disable_index(int index);
+bool __connman_inet_is_disabled_index(int index);
+
 #ifdef __cplusplus
 }
 #endif
Index: connman-1.17/src/connman.h
===================================================================
--- connman-1.17.orig/src/connman.h
+++ connman-1.17/src/connman.h
@@ -521,7 +521,8 @@ void __connman_technology_notify_regdom_
 
 #include <connman/device.h>
 
-int __connman_device_init(const char *device, const char *nodevice);
+int __connman_device_init(const char *device, const char *nodevice,
+			  const char *noipconfig);
 void __connman_device_cleanup(void);
 
 void __connman_device_list(DBusMessageIter *iter, void *user_data);
Index: connman-1.17/src/device.c
===================================================================
--- connman-1.17.orig/src/device.c
+++ connman-1.17/src/device.c
@@ -37,6 +37,7 @@
 static GSList *device_list = NULL;
 static gchar **device_filter = NULL;
 static gchar **nodevice_filter = NULL;
+static gchar **noipconfig_filter = NULL;
 
 enum connman_pending_type {
 	PENDING_NONE	= 0,
@@ -1345,6 +1346,20 @@ done:
 	return device;
 }
 
+static bool __connman_device_noipconfig(const char *devname)
+{
+	char **pattern;
+
+	for (pattern = noipconfig_filter; *pattern; pattern++) {
+		if (g_pattern_match_simple(*pattern, devname) == TRUE) {
+			DBG("do not configure device %s", devname);
+			return TRUE;
+		}
+	}
+
+	return FALSE;
+}
+
 bool __connman_device_isfiltered(const char *devname)
 {
 	char **pattern;
@@ -1433,6 +1448,9 @@ static void cleanup_devices(void)
 		if (index < 0)
 			continue;
 
+		if (__connman_device_noipconfig(interfaces[i]))
+			__connman_inet_disable_index(index);
+
 		DBG("cleaning up %s index %d", interfaces[i], index);
 
 		connman_inet_ifdown(index);
@@ -1446,7 +1464,8 @@ static void cleanup_devices(void)
 	g_strfreev(interfaces);
 }
 
-int __connman_device_init(const char *device, const char *nodevice)
+int __connman_device_init(const char *device, const char *nodevice,
+			  const char *noipconfig)
 {
 	DBG("");
 
@@ -1456,6 +1475,9 @@ int __connman_device_init(const char *de
 	if (nodevice)
 		nodevice_filter = g_strsplit(nodevice, ",", -1);
 
+	if (noipconfig != NULL)
+		noipconfig_filter = g_strsplit(noipconfig, ",", -1);
+
 	cleanup_devices();
 
 	return 0;
Index: connman-1.17/src/inet.c
===================================================================
--- connman-1.17.orig/src/inet.c
+++ connman-1.17/src/inet.c
@@ -55,6 +55,45 @@
 	((struct rtattr *) (((uint8_t*) (nmsg)) +	\
 	NLMSG_ALIGN((nmsg)->nlmsg_len)))
 
+static GHashTable	*g_disabled_indices;
+
+static guint g_intptr_hash(gconstpointer p)
+{
+	uintptr_t	v = (uintptr_t)p;
+	return g_int_hash(&v);
+}
+
+static gboolean g_intptr_equal(gconstpointer  p1,
+			       gconstpointer  p2)
+{
+	uintptr_t	v1 = (uintptr_t)p1;
+	uintptr_t	v2 = (uintptr_t)p2;
+
+	return g_int_equal(&v1, &v2);
+}
+
+void __connman_inet_disable_index(int index)
+{
+	connman_info("disabling interface #%d for ipconfig", index);
+
+	if (g_disabled_indices == NULL)
+		g_disabled_indices = g_hash_table_new_full(g_intptr_hash,
+							   g_intptr_equal,
+							   NULL, NULL);
+
+	g_hash_table_add(g_disabled_indices, (void *)index);
+}
+
+bool __connman_inet_is_disabled_index(int index)
+{
+	bool	rc;
+
+	rc = (g_disabled_indices != NULL &&
+	      g_hash_table_contains(g_disabled_indices, (void *)index));
+
+	return rc;
+}
+
 int __connman_inet_rtnl_addattr_l(struct nlmsghdr *n, size_t max_length,
 				int type, const void *data, size_t data_length)
 {
@@ -98,6 +137,11 @@ int __connman_inet_modify_address(int cm
 		"prefixlen %hhu broadcast %s", cmd, flags, index, family,
 		address, peer, prefixlen, broadcast);
 
+	if (__connman_inet_is_disabled_index(index)) {
+		connman_info("index disabled; skipping %s", __func__);
+		return 0;
+	}
+
 	if (!address)
 		return -EINVAL;
 
@@ -275,6 +319,11 @@ int connman_inet_ifup(int index)
 	struct ifreq ifr;
 	int sk, err;
 
+	if (__connman_inet_is_disabled_index(index)) {
+		connman_info("index disabled; skipping %s", __func__);
+		return 0;
+	}
+
 	sk = socket(PF_INET, SOCK_DGRAM | SOCK_CLOEXEC, 0);
 	if (sk < 0)
 		return -errno;
@@ -318,6 +367,11 @@ int connman_inet_ifdown(int index)
 	struct sockaddr_in *addr;
 	int sk, err;
 
+	if (__connman_inet_is_disabled_index(index)) {
+		connman_info("index disabled; skipping %s", __func__);
+		return 0;
+	}
+
 	sk = socket(PF_INET, SOCK_DGRAM | SOCK_CLOEXEC, 0);
 	if (sk < 0)
 		return -errno;
@@ -518,6 +572,11 @@ int connman_inet_add_network_route(int i
 	DBG("index %d host %s gateway %s netmask %s", index,
 		host, gateway, netmask);
 
+	if (__connman_inet_is_disabled_index(index)) {
+		connman_info("index disabled; skipping %s", __func__);
+		return 0;
+	}
+
 	sk = socket(PF_INET, SOCK_DGRAM | SOCK_CLOEXEC, 0);
 	if (sk < 0) {
 		err = -errno;
@@ -588,6 +647,11 @@ int connman_inet_del_network_route(int i
 
 	DBG("index %d host %s", index, host);
 
+	if (__connman_inet_is_disabled_index(index)) {
+		connman_info("index disabled; skipping %s", __func__);
+		return 0;
+	}
+
 	sk = socket(PF_INET, SOCK_DGRAM | SOCK_CLOEXEC, 0);
 	if (sk < 0) {
 		err = -errno;
@@ -636,6 +700,11 @@ int connman_inet_del_ipv6_network_route(
 
 	DBG("index %d host %s", index, host);
 
+	if (__connman_inet_is_disabled_index(index)) {
+		connman_info("index disabled; skipping %s", __func__);
+		return 0;
+	}
+
 	if (!host)
 		return -EINVAL;
 
@@ -686,6 +755,11 @@ int connman_inet_add_ipv6_network_route(
 
 	DBG("index %d host %s gateway %s", index, host, gateway);
 
+	if (__connman_inet_is_disabled_index(index)) {
+		connman_info("index disabled; skipping %s", __func__);
+		return 0;
+	}
+
 	if (!host)
 		return -EINVAL;
 
@@ -740,6 +814,11 @@ int connman_inet_clear_ipv6_gateway_addr
 
 	DBG("index %d gateway %s", index, gateway);
 
+	if (__connman_inet_is_disabled_index(index)) {
+		connman_info("index disabled; skipping clear_ipv6_gateway operation");
+		return 0;
+	}
+
 	if (!gateway)
 		return -EINVAL;
 
@@ -783,6 +862,11 @@ int connman_inet_set_gateway_interface(i
 
 	DBG("index %d", index);
 
+	if (__connman_inet_is_disabled_index(index)) {
+		connman_info("index disabled; skipping %s", __func__);
+		return 0;
+	}
+
 	sk = socket(PF_INET, SOCK_DGRAM | SOCK_CLOEXEC, 0);
 	if (sk < 0) {
 		err = -errno;
@@ -836,6 +920,11 @@ int connman_inet_set_ipv6_gateway_interf
 
 	DBG("index %d", index);
 
+	if (__connman_inet_is_disabled_index(index)) {
+		connman_info("index disabled; skipping %s", __func__);
+		return 0;
+	}
+
 	sk = socket(PF_INET6, SOCK_DGRAM | SOCK_CLOEXEC, 0);
 	if (sk < 0) {
 		err = -errno;
@@ -888,6 +977,11 @@ int connman_inet_clear_gateway_address(i
 
 	DBG("index %d gateway %s", index, gateway);
 
+	if (__connman_inet_is_disabled_index(index)) {
+		connman_info("index disabled; skipping %s", __func__);
+		return 0;
+	}
+
 	sk = socket(PF_INET, SOCK_DGRAM | SOCK_CLOEXEC, 0);
 	if (sk < 0) {
 		err = -errno;
@@ -945,6 +1039,11 @@ int connman_inet_clear_gateway_interface
 
 	DBG("index %d", index);
 
+	if (__connman_inet_is_disabled_index(index)) {
+		connman_info("index disabled; skipping %s", __func__);
+		return 0;
+	}
+
 	sk = socket(PF_INET, SOCK_DGRAM | SOCK_CLOEXEC, 0);
 	if (sk < 0) {
 		err = -errno;
@@ -998,6 +1097,11 @@ int connman_inet_clear_ipv6_gateway_inte
 
 	DBG("index %d", index);
 
+	if (__connman_inet_is_disabled_index(index)) {
+		connman_info("index disabled; skipping %s", __func__);
+		return 0;
+	}
+
 	sk = socket(PF_INET6, SOCK_DGRAM | SOCK_CLOEXEC, 0);
 	if (sk < 0) {
 		err = -errno;
@@ -1058,6 +1162,11 @@ bool connman_inet_compare_subnet(int ind
 		return -1;
 	host_addr = _host_addr.s_addr;
 
+	if (__connman_inet_is_disabled_index(index)) {
+		connman_info("index disabled; skipping %s", __func__);
+		return 0;
+	}
+
 	sk = socket(PF_INET, SOCK_DGRAM | SOCK_CLOEXEC, 0);
 	if (sk < 0)
 		return false;
@@ -1158,6 +1267,11 @@ int connman_inet_set_mtu(int index, int
 	struct ifreq ifr;
 	int sk, err;
 
+	if (__connman_inet_is_disabled_index(index)) {
+		connman_info("index disabled; skipping %s", __func__);
+		return 0;
+	}
+
 	sk = socket(AF_INET, SOCK_DGRAM | SOCK_CLOEXEC, 0);
 	if (sk < 0)
 		return sk;
Index: connman-1.17/src/main.c
===================================================================
--- connman-1.17.orig/src/main.c
+++ connman-1.17/src/main.c
@@ -452,6 +452,7 @@ static gchar *option_debug = NULL;
 static gchar *option_device = NULL;
 static gchar *option_plugin = NULL;
 static gchar *option_nodevice = NULL;
+static gchar *option_noipconfig = NULL;
 static gchar *option_noplugin = NULL;
 static gchar *option_wifi = NULL;
 static bool option_detach = true;
@@ -481,6 +482,8 @@ static GOptionEntry options[] = {
 			"Specify networking device or interface", "DEV" },
 	{ "nodevice", 'I', 0, G_OPTION_ARG_STRING, &option_nodevice,
 			"Specify networking interface to ignore", "DEV" },
+	{ "noipconfig", 0, 0, G_OPTION_ARG_STRING, &option_noipconfig,
+			"Specify networking interface which shall not be configured", "DEV" },
 	{ "plugin", 'p', 0, G_OPTION_ARG_STRING, &option_plugin,
 				"Specify plugins to load", "NAME,..." },
 	{ "noplugin", 'P', 0, G_OPTION_ARG_STRING, &option_noplugin,
@@ -651,7 +654,7 @@ int main(int argc, char *argv[])
 	__connman_service_init();
 	__connman_provider_init();
 	__connman_network_init();
-	__connman_device_init(option_device, option_nodevice);
+	__connman_device_init(option_device, option_nodevice, option_noipconfig);
 
 	__connman_ippool_init();
 	__connman_iptables_init();
