From b66356dae5334ce9f5d6afbfa758c4a70cbb41a9 Mon Sep 17 00:00:00 2001
From: Enrico Scholz <enrico.scholz@sigma-chemnitz.de>
Date: Thu, 6 Aug 2015 12:19:12 +0200
Subject: [PATCH] added 'long long' type

XXXX

Signed-off-by: Enrico Scholz <enrico.scholz@sigma-chemnitz.de>
---
 dwarf_prototypes.c                |  7 +++++++
 lens_default.c                    |  8 ++++++++
 printf.c                          |  6 ++++--
 read_config_file.c                |  4 ++++
 sysdeps/linux-gnu/aarch64/fetch.c |  2 ++
 sysdeps/linux-gnu/arm/fetch.c     |  2 ++
 sysdeps/linux-gnu/arm/trace.c     |  4 ++++
 sysdeps/linux-gnu/ia64/fetch.c    |  4 ++++
 sysdeps/linux-gnu/m68k/fetch.c    |  2 ++
 sysdeps/linux-gnu/ppc/fetch.c     |  2 ++
 sysdeps/linux-gnu/ppc/trace.c     |  6 ++++++
 sysdeps/linux-gnu/s390/fetch.c    |  2 ++
 sysdeps/linux-gnu/s390/trace.c    |  8 ++++++++
 sysdeps/linux-gnu/x86/fetch.c     |  4 ++++
 sysdeps/linux-gnu/x86/trace.c     |  8 ++++++++
 type.c                            | 21 +++++++++++++++++++++
 type.h                            |  2 ++
 17 files changed, 90 insertions(+), 2 deletions(-)

diff --git a/dwarf_prototypes.c b/dwarf_prototypes.c
index bfac177..d96c565 100644
--- a/dwarf_prototypes.c
+++ b/dwarf_prototypes.c
@@ -69,7 +69,9 @@ static bool _dump_ltrace_tree(const struct arg_type_info *info, int indent)
 	case ARGTYPE_INT:
 	case ARGTYPE_UINT:
 	case ARGTYPE_LONG:
+	case ARGTYPE_LLONG:
 	case ARGTYPE_ULONG:
+	case ARGTYPE_ULLONG:
 	case ARGTYPE_CHAR:
 	case ARGTYPE_SHORT:
 	case ARGTYPE_USHORT:
@@ -195,6 +197,11 @@ static bool get_integer_base_type(enum arg_type *type, int byte_size,
 		return true;
 	}
 
+	if (byte_size == sizeof(long long)) {
+		*type = is_signed ? ARGTYPE_LLONG : ARGTYPE_ULLONG;
+		return true;
+	}
+
 	return false;
 }
 
diff --git a/lens_default.c b/lens_default.c
index fb66b9d..d84c603 100644
--- a/lens_default.c
+++ b/lens_default.c
@@ -404,11 +404,13 @@ toplevel_format_lens(struct lens *lens, FILE *stream,
 	case ARGTYPE_SHORT:
 	case ARGTYPE_INT:
 	case ARGTYPE_LONG:
+	case ARGTYPE_LLONG:
 		return format_integer(stream, value, int_fmt, arguments);
 
 	case ARGTYPE_USHORT:
 	case ARGTYPE_UINT:
 	case ARGTYPE_ULONG:
+	case ARGTYPE_ULLONG:
 		if (int_fmt == INT_FMT_i || int_fmt == INT_FMT_default)
 			int_fmt = INT_FMT_u;
 		return format_integer(stream, value, int_fmt, arguments);
@@ -533,9 +535,11 @@ bool_lens_format_cb(struct lens *lens, FILE *stream,
 	case ARGTYPE_SHORT:
 	case ARGTYPE_INT:
 	case ARGTYPE_LONG:
+	case ARGTYPE_LLONG:
 	case ARGTYPE_USHORT:
 	case ARGTYPE_UINT:
 	case ARGTYPE_ULONG:
+	case ARGTYPE_ULLONG:
 	case ARGTYPE_CHAR:
 		if ((zero = value_is_zero(value, arguments)) < 0)
 			return -1;
@@ -616,6 +620,8 @@ string_lens_format_cb(struct lens *lens, FILE *stream,
 		case ARGTYPE_UINT:
 		case ARGTYPE_LONG:
 		case ARGTYPE_ULONG:
+		case ARGTYPE_LLONG:
+		case ARGTYPE_ULLONG:
 			return redispatch_as_array(lens, stream, value,
 						   arguments,
 						   &string_lens_format_cb);
@@ -633,9 +639,11 @@ string_lens_format_cb(struct lens *lens, FILE *stream,
 	case ARGTYPE_SHORT:
 	case ARGTYPE_INT:
 	case ARGTYPE_LONG:
+	case ARGTYPE_LLONG:
 	case ARGTYPE_USHORT:
 	case ARGTYPE_UINT:
 	case ARGTYPE_ULONG:
+	case ARGTYPE_ULLONG:
 		if (value->parent != NULL && value->type->lens == NULL)
 			return format_wchar(stream, value, arguments);
 		else
diff --git a/printf.c b/printf.c
index daa3683..d2bc36e 100644
--- a/printf.c
+++ b/printf.c
@@ -70,6 +70,8 @@ param_printf_init(struct value *cb_args, size_t nargs,
 	case ARGTYPE_UINT:
 	case ARGTYPE_LONG:
 	case ARGTYPE_ULONG:
+	case ARGTYPE_LLONG:
+	case ARGTYPE_ULLONG:
 		break;
 	default:
 		return NULL;
@@ -129,10 +131,10 @@ form_next_param(struct param_enum *self,
 	assert(hlf <= 2);
 	static enum arg_type ints[] =
 		{ ARGTYPE_CHAR, ARGTYPE_SHORT, ARGTYPE_INT,
-		  ARGTYPE_LONG, ARGTYPE_ULONG };
+		  ARGTYPE_LONG, ARGTYPE_LLONG };
 	static enum arg_type uints[] =
 		{ ARGTYPE_CHAR, ARGTYPE_USHORT, ARGTYPE_UINT,
-		  ARGTYPE_ULONG, ARGTYPE_ULONG };
+		  ARGTYPE_ULONG, ARGTYPE_ULLONG };
 
 	struct arg_type_info *elt_info = NULL;
 	if (format_type == ARGTYPE_ARRAY || format_type == ARGTYPE_POINTER)
diff --git a/read_config_file.c b/read_config_file.c
index 1f1e948..cb3daa2 100644
--- a/read_config_file.c
+++ b/read_config_file.c
@@ -101,6 +101,8 @@ parse_arg_type(char **name, enum arg_type *ret)
 	KEYWORD("uint", ARGTYPE_UINT);
 	KEYWORD("long", ARGTYPE_LONG);
 	KEYWORD("ulong", ARGTYPE_ULONG);
+	KEYWORD("llong", ARGTYPE_LLONG);
+	KEYWORD("ullong", ARGTYPE_ULLONG);
 	KEYWORD("char", ARGTYPE_CHAR);
 	KEYWORD("short", ARGTYPE_SHORT);
 	KEYWORD("ushort", ARGTYPE_USHORT);
@@ -891,6 +893,8 @@ parse_nonpointer_type(struct protolib *plib, struct locus *loc,
 	case ARGTYPE_UINT:
 	case ARGTYPE_LONG:
 	case ARGTYPE_ULONG:
+	case ARGTYPE_LLONG:
+	case ARGTYPE_ULLONG:
 	case ARGTYPE_CHAR:
 	case ARGTYPE_SHORT:
 	case ARGTYPE_USHORT:
diff --git a/sysdeps/linux-gnu/aarch64/fetch.c b/sysdeps/linux-gnu/aarch64/fetch.c
index 2744df0..c3e649a 100644
--- a/sysdeps/linux-gnu/aarch64/fetch.c
+++ b/sysdeps/linux-gnu/aarch64/fetch.c
@@ -211,6 +211,8 @@ pass_arg(struct fetch_context const *context,
 	case ARGTYPE_UINT:
 	case ARGTYPE_LONG:
 	case ARGTYPE_ULONG:
+	case ARGTYPE_LLONG:
+	case ARGTYPE_ULLONG:
 	case ARGTYPE_CHAR:
 	case ARGTYPE_SHORT:
 	case ARGTYPE_USHORT:
diff --git a/sysdeps/linux-gnu/arm/fetch.c b/sysdeps/linux-gnu/arm/fetch.c
index b500448..4141ea5 100644
--- a/sysdeps/linux-gnu/arm/fetch.c
+++ b/sysdeps/linux-gnu/arm/fetch.c
@@ -310,6 +310,8 @@ arch_fetch_retval(struct fetch_context *ctx, enum tof type,
 	case ARGTYPE_UINT:
 	case ARGTYPE_LONG:
 	case ARGTYPE_ULONG:
+	case ARGTYPE_LLONG:
+	case ARGTYPE_ULLONG:
 	case ARGTYPE_POINTER:
 	pass_in_registers:
 		if ((data = value_reserve(valuep, sz)) == NULL)
diff --git a/sysdeps/linux-gnu/arm/trace.c b/sysdeps/linux-gnu/arm/trace.c
index 5e51e91..b33bca2 100644
--- a/sysdeps/linux-gnu/arm/trace.c
+++ b/sysdeps/linux-gnu/arm/trace.c
@@ -690,6 +690,10 @@ arch_type_sizeof(struct process *proc, struct arg_type_info *info)
 	case ARGTYPE_POINTER:
 		return 4;
 
+	case ARGTYPE_LLONG:
+	case ARGTYPE_ULLONG:
+		return 8;
+
 	case ARGTYPE_FLOAT:
 		return 4;
 	case ARGTYPE_DOUBLE:
diff --git a/sysdeps/linux-gnu/ia64/fetch.c b/sysdeps/linux-gnu/ia64/fetch.c
index 171c7a2..1ce9cee 100644
--- a/sysdeps/linux-gnu/ia64/fetch.c
+++ b/sysdeps/linux-gnu/ia64/fetch.c
@@ -403,6 +403,8 @@ arch_fetch_arg_next(struct fetch_context *ctx, enum tof type,
 	case ARGTYPE_UINT:
 	case ARGTYPE_LONG:
 	case ARGTYPE_ULONG:
+	case ARGTYPE_LLONG:
+	case ARGTYPE_ULLONG:
 	case ARGTYPE_POINTER:
 		return allocate_arg(ctx, proc, info, valuep);
 
@@ -437,6 +439,8 @@ arch_fetch_retval(struct fetch_context *ctx, enum tof type,
 	case ARGTYPE_UINT:
 	case ARGTYPE_LONG:
 	case ARGTYPE_ULONG:
+	case ARGTYPE_LLONG:
+	case ARGTYPE_ULLONG:
 	case ARGTYPE_POINTER:
 	case ARGTYPE_STRUCT:
 		return allocate_ret(ctx, proc, info, valuep);
diff --git a/sysdeps/linux-gnu/m68k/fetch.c b/sysdeps/linux-gnu/m68k/fetch.c
index 24bd8f0..ae2bc95 100644
--- a/sysdeps/linux-gnu/m68k/fetch.c
+++ b/sysdeps/linux-gnu/m68k/fetch.c
@@ -170,6 +170,8 @@ arch_fetch_retval(struct fetch_context *context, enum tof type,
 	case ARGTYPE_UINT:
 	case ARGTYPE_LONG:
 	case ARGTYPE_ULONG:
+	case ARGTYPE_LLONG:
+	case ARGTYPE_ULLONG:
 	case ARGTYPE_CHAR:
 	case ARGTYPE_SHORT:
 	case ARGTYPE_USHORT:
diff --git a/sysdeps/linux-gnu/ppc/fetch.c b/sysdeps/linux-gnu/ppc/fetch.c
index c6cbd71..ab06d63 100644
--- a/sysdeps/linux-gnu/ppc/fetch.c
+++ b/sysdeps/linux-gnu/ppc/fetch.c
@@ -496,6 +496,8 @@ allocate_argument(struct fetch_context *ctx, struct process *proc,
 	case ARGTYPE_UINT:
 	case ARGTYPE_LONG:
 	case ARGTYPE_ULONG:
+	case ARGTYPE_LLONG:
+	case ARGTYPE_ULLONG:
 	case ARGTYPE_POINTER:
 		break;
 
diff --git a/sysdeps/linux-gnu/ppc/trace.c b/sysdeps/linux-gnu/ppc/trace.c
index 5aab538..1e63fd8 100644
--- a/sysdeps/linux-gnu/ppc/trace.c
+++ b/sysdeps/linux-gnu/ppc/trace.c
@@ -206,6 +206,10 @@ arch_type_sizeof(struct process *proc, struct arg_type_info *info)
 	case ARGTYPE_POINTER:
 		return proc->e_machine == EM_PPC64 ? 8 : 4;
 
+	case ARGTYPE_LLONG:
+	case ARGTYPE_ULLONG:
+		return 8;		/* TODO: really? */
+
 	case ARGTYPE_FLOAT:
 		return 4;
 	case ARGTYPE_DOUBLE:
@@ -242,6 +246,8 @@ arch_type_alignof(struct process *proc, struct arg_type_info *info)
 	case ARGTYPE_UINT:
 	case ARGTYPE_LONG:
 	case ARGTYPE_ULONG:
+	case ARGTYPE_LLONG:
+	case ARGTYPE_ULLONG:
 	case ARGTYPE_POINTER:
 	case ARGTYPE_FLOAT:
 	case ARGTYPE_DOUBLE:
diff --git a/sysdeps/linux-gnu/s390/fetch.c b/sysdeps/linux-gnu/s390/fetch.c
index 4ad5951..ac50f10 100644
--- a/sysdeps/linux-gnu/s390/fetch.c
+++ b/sysdeps/linux-gnu/s390/fetch.c
@@ -259,6 +259,8 @@ arch_fetch_arg_next(struct fetch_context *ctx, enum tof type,
 	case ARGTYPE_UINT:
 	case ARGTYPE_LONG:
 	case ARGTYPE_ULONG:
+	case ARGTYPE_LLONG:
+	case ARGTYPE_ULLONG:
 	case ARGTYPE_CHAR:
 	case ARGTYPE_SHORT:
 	case ARGTYPE_USHORT:
diff --git a/sysdeps/linux-gnu/s390/trace.c b/sysdeps/linux-gnu/s390/trace.c
index 78b04c3..4c69423 100644
--- a/sysdeps/linux-gnu/s390/trace.c
+++ b/sysdeps/linux-gnu/s390/trace.c
@@ -202,6 +202,10 @@ arch_type_sizeof(struct process *proc, struct arg_type_info *info)
 	case ARGTYPE_POINTER:
 		return proc->e_class == ELFCLASS64 ? 8 : 4;
 
+	case ARGTYPE_LLONG:
+	case ARGTYPE_ULLONG:
+		return 8;		/* TODO: really? */
+
 	case ARGTYPE_FLOAT:
 		return 4;
 	case ARGTYPE_DOUBLE:
@@ -245,6 +249,10 @@ arch_type_alignof(struct process *proc, struct arg_type_info *info)
 	case ARGTYPE_POINTER:
 		return proc->e_class == ELFCLASS64 ? 8 : 4;
 
+	case ARGTYPE_LLONG:
+	case ARGTYPE_ULLONG:
+		return 8;		/* TODO: really */
+
 	case ARGTYPE_FLOAT:
 		return 4;
 	case ARGTYPE_DOUBLE:
diff --git a/sysdeps/linux-gnu/x86/fetch.c b/sysdeps/linux-gnu/x86/fetch.c
index 6868101..2984211 100644
--- a/sysdeps/linux-gnu/x86/fetch.c
+++ b/sysdeps/linux-gnu/x86/fetch.c
@@ -470,6 +470,8 @@ classify(struct process *proc, struct fetch_context *context,
 	case ARGTYPE_UINT:
 	case ARGTYPE_LONG:
 	case ARGTYPE_ULONG:
+	case ARGTYPE_LLONG:
+	case ARGTYPE_ULLONG:
 
 	case ARGTYPE_POINTER:
 		/* and LONGLONG */
@@ -640,6 +642,8 @@ arch_fetch_retval_32(struct fetch_context *context, enum tof type,
 	case ARGTYPE_UINT:
 	case ARGTYPE_LONG:
 	case ARGTYPE_ULONG:
+	case ARGTYPE_LLONG:
+	case ARGTYPE_ULLONG:
 	case ARGTYPE_CHAR:
 	case ARGTYPE_SHORT:
 	case ARGTYPE_USHORT:
diff --git a/sysdeps/linux-gnu/x86/trace.c b/sysdeps/linux-gnu/x86/trace.c
index 6a1a6a5..2a91b49 100644
--- a/sysdeps/linux-gnu/x86/trace.c
+++ b/sysdeps/linux-gnu/x86/trace.c
@@ -134,6 +134,10 @@ arch_type_sizeof(struct process *proc, struct arg_type_info *info)
 	case ARGTYPE_POINTER:
 		return proc->e_machine == EM_X86_64 ? 8 : 4;
 
+	case ARGTYPE_LLONG:
+	case ARGTYPE_ULLONG:
+		return 8;
+
 	case ARGTYPE_FLOAT:
 		return 4;
 	case ARGTYPE_DOUBLE:
@@ -178,6 +182,10 @@ arch_type_alignof(struct process *proc, struct arg_type_info *info)
 	case ARGTYPE_POINTER:
 		return proc->e_machine == EM_X86_64 ? 8 : 4;
 
+	case ARGTYPE_LLONG:
+	case ARGTYPE_ULLONG:
+		return 8;
+
 	case ARGTYPE_FLOAT:
 		return 4;
 	case ARGTYPE_DOUBLE:
diff --git a/type.c b/type.c
index 0db94f3..d087e2a 100644
--- a/type.c
+++ b/type.c
@@ -43,6 +43,8 @@ type_get_simple(enum arg_type type)
 	HANDLE(ARGTYPE_UINT)
 	HANDLE(ARGTYPE_LONG)
 	HANDLE(ARGTYPE_ULONG)
+	HANDLE(ARGTYPE_LLONG)
+	HANDLE(ARGTYPE_ULLONG)
 	HANDLE(ARGTYPE_CHAR)
 	HANDLE(ARGTYPE_SHORT)
 	HANDLE(ARGTYPE_USHORT)
@@ -249,6 +251,8 @@ type_destroy(struct arg_type_info *info)
 	case ARGTYPE_UINT:
 	case ARGTYPE_LONG:
 	case ARGTYPE_ULONG:
+	case ARGTYPE_LLONG:
+	case ARGTYPE_ULLONG:
 	case ARGTYPE_CHAR:
 	case ARGTYPE_SHORT:
 	case ARGTYPE_USHORT:
@@ -337,6 +341,8 @@ type_clone(struct arg_type_info *retp, const struct arg_type_info *info)
 	case ARGTYPE_UINT:
 	case ARGTYPE_LONG:
 	case ARGTYPE_ULONG:
+	case ARGTYPE_LLONG:
+	case ARGTYPE_ULLONG:
 	case ARGTYPE_CHAR:
 	case ARGTYPE_SHORT:
 	case ARGTYPE_USHORT:
@@ -411,6 +417,10 @@ type_sizeof(struct process *proc, struct arg_type_info *type)
 	case ARGTYPE_ULONG:
 		return sizeof(long);
 
+	case ARGTYPE_LLONG:
+	case ARGTYPE_ULLONG:
+		return sizeof(long long);
+
 	case ARGTYPE_FLOAT:
 		return sizeof(float);
 
@@ -468,6 +478,7 @@ type_alignof(struct process *proc, struct arg_type_info *type)
 	struct { char c; short s; } cs;
 	struct { char c; int i; } ci;
 	struct { char c; long l; } cl;
+	struct { char c; long long ll; } cll;
 	struct { char c; void* p; } cp;
 	struct { char c; float f; } cf;
 	struct { char c; double d; } cd;
@@ -476,6 +487,7 @@ type_alignof(struct process *proc, struct arg_type_info *type)
 	static size_t short_alignment = alignof(s, cs);
 	static size_t int_alignment = alignof(i, ci);
 	static size_t long_alignment = alignof(l, cl);
+	static size_t llong_alignment = alignof(ll, cll);
 	static size_t ptr_alignment = alignof(p, cp);
 	static size_t float_alignment = alignof(f, cf);
 	static size_t double_alignment = alignof(d, cd);
@@ -485,6 +497,9 @@ type_alignof(struct process *proc, struct arg_type_info *type)
 	case ARGTYPE_LONG:
 	case ARGTYPE_ULONG:
 		return long_alignment;
+	case ARGTYPE_LLONG:
+	case ARGTYPE_ULLONG:
+		return llong_alignment;
 	case ARGTYPE_CHAR:
 		return char_alignment;
 	case ARGTYPE_SHORT:
@@ -588,6 +603,8 @@ type_is_integral(enum arg_type type)
 	case ARGTYPE_UINT:
 	case ARGTYPE_LONG:
 	case ARGTYPE_ULONG:
+	case ARGTYPE_LLONG:
+	case ARGTYPE_ULLONG:
 	case ARGTYPE_CHAR:
 	case ARGTYPE_SHORT:
 	case ARGTYPE_USHORT:
@@ -616,10 +633,12 @@ type_is_signed(enum arg_type type)
 	case ARGTYPE_SHORT:
 	case ARGTYPE_INT:
 	case ARGTYPE_LONG:
+	case ARGTYPE_LLONG:
 		return 1;
 
 	case ARGTYPE_UINT:
 	case ARGTYPE_ULONG:
+	case ARGTYPE_ULLONG:
 	case ARGTYPE_USHORT:
 		return 0;
 
@@ -650,8 +669,10 @@ type_get_fp_equivalent(struct arg_type_info *info)
 	case ARGTYPE_SHORT:
 	case ARGTYPE_INT:
 	case ARGTYPE_LONG:
+	case ARGTYPE_LLONG:
 	case ARGTYPE_UINT:
 	case ARGTYPE_ULONG:
+	case ARGTYPE_ULLONG:
 	case ARGTYPE_USHORT:
 	case ARGTYPE_VOID:
 	case ARGTYPE_ARRAY:
diff --git a/type.h b/type.h
index 9ddaa34..36e34a5 100644
--- a/type.h
+++ b/type.h
@@ -31,7 +31,9 @@ enum arg_type {
 	ARGTYPE_INT,
 	ARGTYPE_UINT,
 	ARGTYPE_LONG,
+	ARGTYPE_LLONG,
 	ARGTYPE_ULONG,
+	ARGTYPE_ULLONG,
 	ARGTYPE_CHAR,
 	ARGTYPE_SHORT,
 	ARGTYPE_USHORT,
-- 
2.4.3

