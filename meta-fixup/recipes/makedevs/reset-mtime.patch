diff --git a/meta/recipes-devtools/makedevs/makedevs-1.0.0/makedevs.c b/meta/recipes-devtools/makedevs/makedevs-1.0.0/makedevs.c
index cc3707b..f9f6634 100644
--- a/makedevs.c
+++ b/makedevs.c
@@ -13,6 +13,7 @@
 #include <libgen.h>
 #include <sys/types.h>
 #include <sys/stat.h>
+#include <sys/time.h>
 
 #define MINORBITS	8
 #define MKDEV(ma,mi)	(((ma) << MINORBITS) | (mi))
@@ -31,6 +32,9 @@ static const char *const app_name = "makedevs";
 static const char *const memory_exhausted = "memory exhausted";
 static char default_rootdir[]=".";
 static char *rootdir = default_rootdir;
+static int reset_mtime = 1;
+
+static struct timeval const	utime_utc[2];
 
 struct name_id {
 	char name[MAX_NAME_LEN+1];
@@ -224,11 +228,18 @@ static void free_list(struct name_id *list)
 	}
 }
 
+static void reset_utime(char const *path)
+{
+	if (reset_mtime)
+		utimes(path, utime_utc);
+}
+
 static void add_new_directory(char *name, char *path, 
 		unsigned long uid, unsigned long gid, unsigned long mode)
 {
 	mkdir(path, mode);
 	chown(path, uid, gid);
+	reset_utime(path);
 //	printf("Directory: %s %s  UID: %ld  GID %ld  MODE: %04lo\n", path, name, uid, gid, mode);
 }
 
@@ -251,6 +262,7 @@ static void add_new_device(char *name, char *path, unsigned long uid,
 
 	mknod(path, mode, rdev);
 	chown(path, uid, gid);
+	reset_utime(path);
 //	printf("Device: %s %s  UID: %ld  GID: %ld  MODE: %04lo  MAJOR: %d  MINOR: %d\n",
 //			path, name, uid, gid, mode, (short)(rdev >> 8), (short)(rdev & 0xff));
 }
@@ -266,6 +278,7 @@ static void add_new_file(char *name, char *path, unsigned long uid,
 	} 
 	chmod(path, mode);
 	chown(path, uid, gid);
+	reset_utime(path);
 //	printf("File: %s %s  UID: %ld  GID: %ld  MODE: %04lo\n",
 //			path, name, gid, uid, mode);
 }
@@ -277,6 +290,7 @@ static void add_new_fifo(char *name, char *path, unsigned long uid,
 	if (mknod(path, mode, 0))
 		error_msg_and_die("%s: file can not be created with mknod!", path);
 	chown(path, uid, gid);
+	reset_utime(path);
 //	printf("File: %s %s  UID: %ld  GID: %ld  MODE: %04lo\n",
 //			path, name, gid, uid, mode);
 }
@@ -454,7 +468,7 @@ int main(int argc, char **argv)
 
 	umask (0);
 
-	while ((opt = getopt_long(argc, argv, "D:d:r:qhv", 
+	while ((opt = getopt_long(argc, argv, "D:d:r:qhvT",
 			long_options, &c)) >= 0) {
 		switch (opt) {
 		case 'D':
@@ -479,6 +493,10 @@ int main(int argc, char **argv)
 			fprintf(stderr, "makedevs revision %.*s\n",
 					(int) strlen(revtext) - 13, revtext + 11);
 			exit(1);
+
+		case 'T':
+			reset_mtime = 0;
+			break;
 		}
 	}
 
