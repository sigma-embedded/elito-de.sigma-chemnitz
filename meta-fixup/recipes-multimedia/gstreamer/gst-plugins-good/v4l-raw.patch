Index: gst-plugins-good-0.10.31/sys/v4l2/gstv4l2object.c
===================================================================
--- gst-plugins-good-0.10.31.orig/sys/v4l2/gstv4l2object.c
+++ gst-plugins-good-0.10.31/sys/v4l2/gstv4l2object.c
@@ -27,6 +27,7 @@
 #include <errno.h>
 #include <unistd.h>
 #include <string.h>
+#include <stdlib.h>
 
 #ifdef HAVE_GUDEV
 #include <gudev/gudev.h>
@@ -486,6 +487,7 @@ gst_v4l2_object_new (GstElement * elemen
   v4l2object->colors = NULL;
 
   v4l2object->xwindow_id = 0;
+  v4l2object->raw_open = getenv("X_PHYTEC_GSTV4L_RAW") && getenv("X_PHYTEC_GSTV4L_RAW")[0];
 
   return v4l2object;
 }
Index: gst-plugins-good-0.10.31/sys/v4l2/gstv4l2object.h
===================================================================
--- gst-plugins-good-0.10.31.orig/sys/v4l2/gstv4l2object.h
+++ gst-plugins-good-0.10.31/sys/v4l2/gstv4l2object.h
@@ -120,6 +120,8 @@ struct _GstV4l2Object {
   GstV4l2GetInOutFunction  get_in_out_func;
   GstV4l2SetInOutFunction  set_in_out_func;
   GstV4l2UpdateFpsFunction update_fps_func;
+
+  gboolean raw_open;
 };
 
 struct _GstV4l2ObjectClassHelper {
Index: gst-plugins-good-0.10.31/sys/v4l2/gstv4l2src.c
===================================================================
--- gst-plugins-good-0.10.31.orig/sys/v4l2/gstv4l2src.c
+++ gst-plugins-good-0.10.31/sys/v4l2/gstv4l2src.c
@@ -47,6 +47,7 @@
 #undef HAVE_XVIDEO
 
 #include <string.h>
+#include <stdlib.h>
 #include <sys/time.h>
 #include "v4l2src_calls.h"
 #include <unistd.h>
@@ -66,6 +67,7 @@ GST_DEBUG_CATEGORY (v4l2src_debug);
 #define PROP_DEF_QUEUE_SIZE         2
 #define PROP_DEF_ALWAYS_COPY        TRUE
 #define PROP_DEF_DECIMATE           1
+#define PROP_DEF_RAW		    FALSE
 
 #define DEFAULT_PROP_DEVICE   "/dev/video0"
 
@@ -75,7 +77,8 @@ enum
   V4L2_STD_OBJECT_PROPS,
   PROP_QUEUE_SIZE,
   PROP_ALWAYS_COPY,
-  PROP_DECIMATE
+  PROP_DECIMATE,
+  PROP_RAW,
 };
 
 GST_IMPLEMENT_V4L2_PROBE_METHODS (GstV4l2SrcClass, gst_v4l2src);
@@ -273,6 +276,11 @@ gst_v4l2src_class_init (GstV4l2SrcClass
       g_param_spec_boolean ("always-copy", "Always Copy",
           "If the buffer will or not be used directly from mmap",
           PROP_DEF_ALWAYS_COPY, G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS));
+  g_object_class_install_property (gobject_class, PROP_RAW,
+      g_param_spec_boolean ("raw", "Return raw data",
+          "When true, conversion routines of libv4l2 will not be used",
+          getenv("X_PHYTEC_GSTV4L_RAW") && getenv("X_PHYTEC_GSTV4L_RAW")[0],
+          G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS));
   /**
    * GstV4l2Src:decimate
    *
@@ -359,6 +367,9 @@ gst_v4l2src_set_property (GObject * obje
       case PROP_ALWAYS_COPY:
         v4l2src->always_copy = g_value_get_boolean (value);
         break;
+      case PROP_RAW:
+        v4l2src->v4l2object->raw_open = g_value_get_boolean (value);
+        break;
       case PROP_DECIMATE:
         v4l2src->decimate = g_value_get_int (value);
         break;
@@ -385,6 +396,9 @@ gst_v4l2src_get_property (GObject * obje
       case PROP_ALWAYS_COPY:
         g_value_set_boolean (value, v4l2src->always_copy);
         break;
+      case PROP_RAW:
+        g_value_set_boolean (value, v4l2src->v4l2object->raw_open);
+        break;
       case PROP_DECIMATE:
         g_value_set_int (value, v4l2src->decimate);
         break;
Index: gst-plugins-good-0.10.31/sys/v4l2/v4l2_calls.c
===================================================================
--- gst-plugins-good-0.10.31.orig/sys/v4l2/v4l2_calls.c
+++ gst-plugins-good-0.10.31/sys/v4l2/v4l2_calls.c
@@ -444,7 +444,9 @@ gst_v4l2_open (GstV4l2Object * v4l2objec
     goto not_open;
 
   libv4l2_fd = v4l2_fd_open (v4l2object->video_fd,
-      V4L2_ENABLE_ENUM_FMT_EMULATION);
+			     v4l2object->raw_open
+			     ? V4L2_DISABLE_CONVERSION
+			     : V4L2_ENABLE_ENUM_FMT_EMULATION);
   /* Note the v4l2_xxx functions are designed so that if they get passed an
      unknown fd, the will behave exactly as their regular xxx counterparts, so
      if v4l2_fd_open fails, we continue as normal (missing the libv4l2 custom
