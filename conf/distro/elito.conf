#-----------------------------------------------------------------------------
#@TYPE: Distribution
#@NAME: Minimal
#@DESCRIPTION: Embedded Linux Distribution Configuration (minimal)
#
#@COMMENT: This distribution configuration serves as a starting point for
#@COMMENT: the integration of new target platforms, machines, or distributions.
#@COMMENT: It bases on conservative settings and should always be buildable.
#-----------------------------------------------------------------------------

#
# Header
#
DISTRO_NAME          = "ELiTo"
DISTRO_VERSION_MAJOR = "0.90"
MAINTAINER	     = "SIGMA Chemnitz GmbH <elito@sigma-chemnitz.de>"

DISTRO_VERSION       = "${DISTRO_VERSION_MAJOR}.${SRCDATE}"

DISTRO_INIT_MANAGER ?= "upstart"

INHERIT += "devshell debian elito"

IMAGE_FSTYPES ?= "	\
	tar.bz2		\
	${@base_contains('MACHINE_FEATURES','ubifs','ubifs ubinize','',d)}	\
"

ELITO_MIRROR	 ?= "http://www.sigma-chemnitz.de/dl/elito/sources"
ELITO_GIT_BASE    = "git://git.sigma-chemnitz.de"
ELITO_GIT_MIRROR ?= "${ELITO_ROOTDIR}/elito"
ELITO_GIT_REPO	 ?= "git://www.sigma-chemnitz.de/dl/elito/git"
ELITO_GIT_REPO_KERNEL ?= "${ELITO_GIT_REPO}/kernel.git"

IMAGE_PREPROCESS_COMMAND_prepend = " \
	f=${IMAGE_ROOTFS}/etc/group;  grep -q '^ntp:' $f || \
		echo 'ntpd:x:82:' >> $f;	\
	f=${IMAGE_ROOTFS}/etc/passwd; grep -q '^ntp:' $f || \
		echo 'ntpd:x:82:82::/var/lib/ntp:/sbin/nologin' >> $f;	\
\
	f=${IMAGE_ROOTFS}/etc/group;  grep -q '^messagebus:' $f || \
		echo 'messagebus:x:81:' >> $f;	\
	f=${IMAGE_ROOTFS}/etc/passwd; grep -q '^messagebus:' $f || \
		echo 'messagebus:x:81:81::/var/run/dbus:/sbin/nologin' >> $f;	\
"

SRC_URI_append_pn-ipkg-utils-native = " file://${ELITO_TOPDIR}/files/ipkg-utils/license.patch;patch=0"
SRC_URI_append_pn-ipkg-utils        = " file://${ELITO_TOPDIR}/files/ipkg-utils/license.patch;patch=0"

SRC_URI_append_pn-opkg-native = " file://${ELITO_TOPDIR}/files/opkg/license-info.patch;patch=0"
SRC_URI_append_pn-opkg        = " file://${ELITO_TOPDIR}/files/opkg/license-info.patch;patch=0"

SRC_URI_append_pn-busybox     = " file://${ELITO_TOPDIR}/files/busybox/cvt-color.patch;patch=1"

SRCREV_pn-opkg-native ?= 213
SRCREV_pn-opkg        ?= 213

MIRRORS_append = "${@'\n'.join([		\
	"ftp://.*/.* ${ELITO_MIRROR}/",		\
	"http://.*/.* ${ELITO_MIRROR}/",	\
])}"

PROJECT_FILE_DATE = "${@get_filedate('PROJECT_TOPDIR', 'conf/project.conf', d)}"
FILESPATH_prepend = "${PROJECT_TOPDIR}/files/${PN}/${PR}:${PROJECT_TOPDIR}/files/${PN}:${PROJECT_TOPDIR}/files:"

SRCPV = "${@bb.fetch.get_srcrev(d)}"

#
# Kernel
#
KERNEL			 = "kernel26"
OLDEST_KERNEL		?= "2.6.25"
KERNEL_UIMAGE		 = 1
MACHINE_TASK_PROVIDER	?= "elito-task-core"

PROJECT_FEATURES	?= "modules usb"
FEED_BASE_URI           ?= "http://www.sigma-chemnitz.de/dl/elito/${DISTRO_VERSION_MAJOR}/ipkg"

RRECOMMENDS_append_libasound	= " virtual/snd-dev"
RRECOMMENDS_append_dropbear	= " virtual/dropbear-init"
RRECOMMENDS_append_tinylogin	= " virtual/tinylogin-init"
RRECOMMENDS_append_dbus		= " virtual/dbus-init elito-dbus-base"

RRECOMMENDS_append_kernel-module-rt73usb = " \
	wireless-tools rt73-firmware	\
	kernel-module-arc4 kernel-module-ecb kernel-module-cryptomgr"

RRECOMMENDS_append_rt73-firmware = " udev-firmware"

RRECOMMENDS_append_kernel-module-usb-storage = " kernel-module-sd-mod"

RRECOMMENDS_append_i2c-tools		= " kernel-module-i2c-dev"
RRECOMMENDS_append_udev-rules-base	= " udev-rules-ubi"
RRECOMMENDS_append_mtd-utils-ubi-tools	= " \
	mtd-utils-flash-tools mtd-utils-nand-tools"

#
# Binutils & Compiler
#
PREFERRED_PROVIDER_virtual/arm-${TARGET_OS}-binutils	    = "binutils-cross"

PREFERRED_PROVIDER_linux-libc-headers			    = "linux-libc-headers"
PREFERRED_PROVIDER_virtual/${TARGET_PREFIX}libc-initial	    = "glibc-initial"

PREFERRED_PROVIDER_virtual/${TARGET_PREFIX}gcc-initial	    = "gcc-cross-initial"
PREFERRED_PROVIDER_virtual/${TARGET_PREFIX}gcc-intermediate = "gcc-cross-intermediate"
PREFERRED_PROVIDER_virtual/${TARGET_PREFIX}gcc		    = "gcc-cross"
PREFERRED_PROVIDER_virtual/${TARGET_PREFIX}g++		    = "gcc-cross"

PREFERRED_PROVIDER_virtual/libqte2        = "qte-mt"
PREFERRED_PROVIDER_avahi		  = "avahi"
PREFERRED_PROVIDER_virtual/db-native	  = "db-native"
PREFERRED_PROVIDER_gtk+			  = "gtk+"
PREFERRED_PROVIDER_virtual/db		  = "db"

PREFERRED_PROVIDER_virtual/kernel	  = "elito-kernel"


PREFERRED_VERSION_gcc			 ?= "4.3.3"
PREFERRED_VERSION_gcc-cross		 ?= "4.3.3"
PREFERRED_VERSION_gcc-cross-initial	 ?= "4.3.3"
PREFERRED_VERSION_gcc-cross-intermediate ?= "4.3.3"

#
# C library
#
PREFERRED_PROVIDER_virtual/libiconv = "glibc"
PREFERRED_PROVIDER_virtual/libintl  = "glibc"
PREFERRED_PROVIDER_virtual/libc	    = "glibc"
PREFERRED_PROVIDER_virtual/${TARGET_PREFIX}libc-for-gcc = "glibc"
PREFERRED_PROVIDER_linux-libc-headers = "linux-libc-headers"
PREFERRED_VERSION_linux-libc-headers ?= "2.6.25"
PREFERRED_VERSION_glibc		?= "2.7"
PREFERRED_VERSION_glibc-initial ?= "2.7"

#
# Bootstrap & Init
#
PREFERRED_PROVIDER_task-bootstrap = "task-bootstrap"

#
# Preferred versions
#

require conf/distro/include/sane-srcdates.inc
require conf/distro/include/sane-srcrevs.inc

PREFERRED_PROVIDER_virtual/libx11 ?= "libx11"
require conf/distro/include/preferred-xorg-versions-X11R7.4.inc
